// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: predicate.proto

package predicates

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"

	metadata "github.com/deven96/ahnlich/sdk/ahnlich-client-go/grpc/metadata"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Predicate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Kind:
	//
	//	*Predicate_Equals
	//	*Predicate_NotEquals
	//	*Predicate_In
	//	*Predicate_NotIn
	Kind isPredicate_Kind `protobuf_oneof:"kind"`
}

func (x *Predicate) Reset() {
	*x = Predicate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_predicate_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Predicate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Predicate) ProtoMessage() {}

func (x *Predicate) ProtoReflect() protoreflect.Message {
	mi := &file_predicate_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Predicate.ProtoReflect.Descriptor instead.
func (*Predicate) Descriptor() ([]byte, []int) {
	return file_predicate_proto_rawDescGZIP(), []int{0}
}

func (m *Predicate) GetKind() isPredicate_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *Predicate) GetEquals() *Equals {
	if x, ok := x.GetKind().(*Predicate_Equals); ok {
		return x.Equals
	}
	return nil
}

func (x *Predicate) GetNotEquals() *NotEquals {
	if x, ok := x.GetKind().(*Predicate_NotEquals); ok {
		return x.NotEquals
	}
	return nil
}

func (x *Predicate) GetIn() *In {
	if x, ok := x.GetKind().(*Predicate_In); ok {
		return x.In
	}
	return nil
}

func (x *Predicate) GetNotIn() *NotIn {
	if x, ok := x.GetKind().(*Predicate_NotIn); ok {
		return x.NotIn
	}
	return nil
}

type isPredicate_Kind interface {
	isPredicate_Kind()
}

type Predicate_Equals struct {
	Equals *Equals `protobuf:"bytes,1,opt,name=equals,proto3,oneof"`
}

type Predicate_NotEquals struct {
	NotEquals *NotEquals `protobuf:"bytes,2,opt,name=not_equals,json=notEquals,proto3,oneof"`
}

type Predicate_In struct {
	In *In `protobuf:"bytes,3,opt,name=in,proto3,oneof"`
}

type Predicate_NotIn struct {
	NotIn *NotIn `protobuf:"bytes,4,opt,name=not_in,json=notIn,proto3,oneof"`
}

func (*Predicate_Equals) isPredicate_Kind() {}

func (*Predicate_NotEquals) isPredicate_Kind() {}

func (*Predicate_In) isPredicate_Kind() {}

func (*Predicate_NotIn) isPredicate_Kind() {}

type Equals struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string                  `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value *metadata.MetadataValue `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Equals) Reset() {
	*x = Equals{}
	if protoimpl.UnsafeEnabled {
		mi := &file_predicate_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Equals) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Equals) ProtoMessage() {}

func (x *Equals) ProtoReflect() protoreflect.Message {
	mi := &file_predicate_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Equals.ProtoReflect.Descriptor instead.
func (*Equals) Descriptor() ([]byte, []int) {
	return file_predicate_proto_rawDescGZIP(), []int{1}
}

func (x *Equals) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Equals) GetValue() *metadata.MetadataValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type NotEquals struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string                  `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value *metadata.MetadataValue `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *NotEquals) Reset() {
	*x = NotEquals{}
	if protoimpl.UnsafeEnabled {
		mi := &file_predicate_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotEquals) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotEquals) ProtoMessage() {}

func (x *NotEquals) ProtoReflect() protoreflect.Message {
	mi := &file_predicate_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotEquals.ProtoReflect.Descriptor instead.
func (*NotEquals) Descriptor() ([]byte, []int) {
	return file_predicate_proto_rawDescGZIP(), []int{2}
}

func (x *NotEquals) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *NotEquals) GetValue() *metadata.MetadataValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type In struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string                    `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Values []*metadata.MetadataValue `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *In) Reset() {
	*x = In{}
	if protoimpl.UnsafeEnabled {
		mi := &file_predicate_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *In) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*In) ProtoMessage() {}

func (x *In) ProtoReflect() protoreflect.Message {
	mi := &file_predicate_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use In.ProtoReflect.Descriptor instead.
func (*In) Descriptor() ([]byte, []int) {
	return file_predicate_proto_rawDescGZIP(), []int{3}
}

func (x *In) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *In) GetValues() []*metadata.MetadataValue {
	if x != nil {
		return x.Values
	}
	return nil
}

type NotIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string                    `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Values []*metadata.MetadataValue `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *NotIn) Reset() {
	*x = NotIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_predicate_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotIn) ProtoMessage() {}

func (x *NotIn) ProtoReflect() protoreflect.Message {
	mi := &file_predicate_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotIn.ProtoReflect.Descriptor instead.
func (*NotIn) Descriptor() ([]byte, []int) {
	return file_predicate_proto_rawDescGZIP(), []int{4}
}

func (x *NotIn) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *NotIn) GetValues() []*metadata.MetadataValue {
	if x != nil {
		return x.Values
	}
	return nil
}

type PredicateCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Kind:
	//
	//	*PredicateCondition_Value
	//	*PredicateCondition_And
	//	*PredicateCondition_Or
	Kind isPredicateCondition_Kind `protobuf_oneof:"kind"`
}

func (x *PredicateCondition) Reset() {
	*x = PredicateCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_predicate_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PredicateCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PredicateCondition) ProtoMessage() {}

func (x *PredicateCondition) ProtoReflect() protoreflect.Message {
	mi := &file_predicate_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PredicateCondition.ProtoReflect.Descriptor instead.
func (*PredicateCondition) Descriptor() ([]byte, []int) {
	return file_predicate_proto_rawDescGZIP(), []int{5}
}

func (m *PredicateCondition) GetKind() isPredicateCondition_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *PredicateCondition) GetValue() *Predicate {
	if x, ok := x.GetKind().(*PredicateCondition_Value); ok {
		return x.Value
	}
	return nil
}

func (x *PredicateCondition) GetAnd() *AndCondition {
	if x, ok := x.GetKind().(*PredicateCondition_And); ok {
		return x.And
	}
	return nil
}

func (x *PredicateCondition) GetOr() *OrCondition {
	if x, ok := x.GetKind().(*PredicateCondition_Or); ok {
		return x.Or
	}
	return nil
}

type isPredicateCondition_Kind interface {
	isPredicateCondition_Kind()
}

type PredicateCondition_Value struct {
	Value *Predicate `protobuf:"bytes,1,opt,name=value,proto3,oneof"`
}

type PredicateCondition_And struct {
	And *AndCondition `protobuf:"bytes,2,opt,name=and,proto3,oneof"`
}

type PredicateCondition_Or struct {
	Or *OrCondition `protobuf:"bytes,3,opt,name=or,proto3,oneof"`
}

func (*PredicateCondition_Value) isPredicateCondition_Kind() {}

func (*PredicateCondition_And) isPredicateCondition_Kind() {}

func (*PredicateCondition_Or) isPredicateCondition_Kind() {}

type AndCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Left  *PredicateCondition `protobuf:"bytes,1,opt,name=left,proto3" json:"left,omitempty"`
	Right *PredicateCondition `protobuf:"bytes,2,opt,name=right,proto3" json:"right,omitempty"`
}

func (x *AndCondition) Reset() {
	*x = AndCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_predicate_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndCondition) ProtoMessage() {}

func (x *AndCondition) ProtoReflect() protoreflect.Message {
	mi := &file_predicate_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndCondition.ProtoReflect.Descriptor instead.
func (*AndCondition) Descriptor() ([]byte, []int) {
	return file_predicate_proto_rawDescGZIP(), []int{6}
}

func (x *AndCondition) GetLeft() *PredicateCondition {
	if x != nil {
		return x.Left
	}
	return nil
}

func (x *AndCondition) GetRight() *PredicateCondition {
	if x != nil {
		return x.Right
	}
	return nil
}

type OrCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Left  *PredicateCondition `protobuf:"bytes,1,opt,name=left,proto3" json:"left,omitempty"`
	Right *PredicateCondition `protobuf:"bytes,2,opt,name=right,proto3" json:"right,omitempty"`
}

func (x *OrCondition) Reset() {
	*x = OrCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_predicate_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrCondition) ProtoMessage() {}

func (x *OrCondition) ProtoReflect() protoreflect.Message {
	mi := &file_predicate_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrCondition.ProtoReflect.Descriptor instead.
func (*OrCondition) Descriptor() ([]byte, []int) {
	return file_predicate_proto_rawDescGZIP(), []int{7}
}

func (x *OrCondition) GetLeft() *PredicateCondition {
	if x != nil {
		return x.Left
	}
	return nil
}

func (x *OrCondition) GetRight() *PredicateCondition {
	if x != nil {
		return x.Right
	}
	return nil
}

var File_predicate_proto protoreflect.FileDescriptor

var file_predicate_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0a, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x1a, 0x0e, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc7, 0x01,
	0x0a, 0x09, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x65,
	0x71, 0x75, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72,
	0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x73, 0x48,
	0x00, 0x52, 0x06, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x73, 0x12, 0x36, 0x0a, 0x0a, 0x6e, 0x6f, 0x74,
	0x5f, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x45, 0x71,
	0x75, 0x61, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x09, 0x6e, 0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, 0x6c,
	0x73, 0x12, 0x20, 0x0a, 0x02, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x48, 0x00, 0x52,
	0x02, 0x69, 0x6e, 0x12, 0x2a, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73,
	0x2e, 0x4e, 0x6f, 0x74, 0x49, 0x6e, 0x48, 0x00, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x49, 0x6e, 0x42,
	0x06, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22, 0x49, 0x0a, 0x06, 0x45, 0x71, 0x75, 0x61, 0x6c,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x4c, 0x0a, 0x09, 0x4e, 0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x47, 0x0a, 0x02, 0x49, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x4a, 0x0a, 0x05, 0x4e, 0x6f, 0x74,
	0x49, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0xa4, 0x01, 0x0a, 0x12, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72,
	0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2c, 0x0a, 0x03, 0x61,
	0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x65, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x41, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x03, 0x61, 0x6e, 0x64, 0x12, 0x29, 0x0a, 0x02, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x73, 0x2e, 0x4f, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x02, 0x6f, 0x72, 0x42, 0x06, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22, 0x78, 0x0a, 0x0c,
	0x41, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x04,
	0x6c, 0x65, 0x66, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x65,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x6c, 0x65, 0x66, 0x74,
	0x12, 0x34, 0x0a, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x65,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x22, 0x77, 0x0a, 0x0b, 0x4f, 0x72, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73,
	0x2e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x12, 0x34, 0x0a, 0x05, 0x72, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x65, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x42,
	0x4d, 0x5a, 0x4b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x65,
	0x76, 0x65, 0x6e, 0x39, 0x36, 0x2f, 0x61, 0x68, 0x6e, 0x6c, 0x69, 0x63, 0x68, 0x2f, 0x73, 0x64,
	0x6b, 0x2f, 0x61, 0x68, 0x6e, 0x6c, 0x69, 0x63, 0x68, 0x2d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2d, 0x67, 0x6f, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x73, 0x3b, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_predicate_proto_rawDescOnce sync.Once
	file_predicate_proto_rawDescData = file_predicate_proto_rawDesc
)

func file_predicate_proto_rawDescGZIP() []byte {
	file_predicate_proto_rawDescOnce.Do(func() {
		file_predicate_proto_rawDescData = protoimpl.X.CompressGZIP(file_predicate_proto_rawDescData)
	})
	return file_predicate_proto_rawDescData
}

var file_predicate_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_predicate_proto_goTypes = []any{
	(*Predicate)(nil),              // 0: predicates.Predicate
	(*Equals)(nil),                 // 1: predicates.Equals
	(*NotEquals)(nil),              // 2: predicates.NotEquals
	(*In)(nil),                     // 3: predicates.In
	(*NotIn)(nil),                  // 4: predicates.NotIn
	(*PredicateCondition)(nil),     // 5: predicates.PredicateCondition
	(*AndCondition)(nil),           // 6: predicates.AndCondition
	(*OrCondition)(nil),            // 7: predicates.OrCondition
	(*metadata.MetadataValue)(nil), // 8: metadata.MetadataValue
}
var file_predicate_proto_depIdxs = []int32{
	1,  // 0: predicates.Predicate.equals:type_name -> predicates.Equals
	2,  // 1: predicates.Predicate.not_equals:type_name -> predicates.NotEquals
	3,  // 2: predicates.Predicate.in:type_name -> predicates.In
	4,  // 3: predicates.Predicate.not_in:type_name -> predicates.NotIn
	8,  // 4: predicates.Equals.value:type_name -> metadata.MetadataValue
	8,  // 5: predicates.NotEquals.value:type_name -> metadata.MetadataValue
	8,  // 6: predicates.In.values:type_name -> metadata.MetadataValue
	8,  // 7: predicates.NotIn.values:type_name -> metadata.MetadataValue
	0,  // 8: predicates.PredicateCondition.value:type_name -> predicates.Predicate
	6,  // 9: predicates.PredicateCondition.and:type_name -> predicates.AndCondition
	7,  // 10: predicates.PredicateCondition.or:type_name -> predicates.OrCondition
	5,  // 11: predicates.AndCondition.left:type_name -> predicates.PredicateCondition
	5,  // 12: predicates.AndCondition.right:type_name -> predicates.PredicateCondition
	5,  // 13: predicates.OrCondition.left:type_name -> predicates.PredicateCondition
	5,  // 14: predicates.OrCondition.right:type_name -> predicates.PredicateCondition
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_predicate_proto_init() }
func file_predicate_proto_init() {
	if File_predicate_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_predicate_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Predicate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_predicate_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Equals); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_predicate_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*NotEquals); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_predicate_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*In); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_predicate_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*NotIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_predicate_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*PredicateCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_predicate_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*AndCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_predicate_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*OrCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_predicate_proto_msgTypes[0].OneofWrappers = []any{
		(*Predicate_Equals)(nil),
		(*Predicate_NotEquals)(nil),
		(*Predicate_In)(nil),
		(*Predicate_NotIn)(nil),
	}
	file_predicate_proto_msgTypes[5].OneofWrappers = []any{
		(*PredicateCondition_Value)(nil),
		(*PredicateCondition_And)(nil),
		(*PredicateCondition_Or)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_predicate_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_predicate_proto_goTypes,
		DependencyIndexes: file_predicate_proto_depIdxs,
		MessageInfos:      file_predicate_proto_msgTypes,
	}.Build()
	File_predicate_proto = out.File
	file_predicate_proto_rawDesc = nil
	file_predicate_proto_goTypes = nil
	file_predicate_proto_depIdxs = nil
}
