"use strict";(self.webpackChunkahnlich_web=self.webpackChunkahnlich_web||[]).push([[6497],{28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>l});var i=r(96540);const t={},s=i.createContext(t);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(s.Provider,{value:n},e.children)}},62581:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"client-libraries/python/request-ai/drop-non-linear-algx","title":"Drop Non-Linear Algorithm Index","description":"The Drop Non Linear Algorithm Index operation removes an index that was previously created for non-linear algorithms such as KD-Tree . These indices are typically used to accelerate similarity searches in high-dimensional spaces.","source":"@site/docs/client-libraries/python/request-ai/drop-non-linear-algx.md","sourceDirName":"client-libraries/python/request-ai","slug":"/client-libraries/python/request-ai/drop-non-linear-algx","permalink":"/docs/client-libraries/python/request-ai/drop-non-linear-algx","draft":false,"unlisted":false,"editUrl":"https://github.com/deven96/ahnlich/tree/main/web/ahnlich-web/docs/client-libraries/python/request-ai/drop-non-linear-algx.md","tags":[],"version":"current","frontMatter":{"title":"Drop Non-Linear Algorithm Index"},"sidebar":"docsSidebar","previous":{"title":"Create Non-Linear algorithm Index","permalink":"/docs/client-libraries/python/request-ai/create-non-linear-algx"},"next":{"title":"Bulk Requests","permalink":"/docs/client-libraries/python/bulk-requests"}}');var t=r(74848),s=r(28453);const o={title:"Drop Non-Linear Algorithm Index"},l="Drop Non-Linear Algorithm Index",a={},c=[{value:"Behavior",id:"behavior",level:2}];function h(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"drop-non-linear-algorithm-index",children:"Drop Non-Linear Algorithm Index"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"Drop Non Linear Algorithm"})," Index operation removes an index that was previously created for non-linear algorithms such as KD-Tree . These indices are typically used to accelerate similarity searches in high-dimensional spaces."]}),"\n",(0,t.jsx)(n.p,{children:"This operation is useful when:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"An index is no longer needed and you want to free up system resources."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"You need to replace an index with a different algorithm type."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"You are resetting the store to a clean state."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["If the specified index does not exist, the request will fail if ",(0,t.jsx)(n.code,{children:"error_if_not_exists=True"})," is set. Otherwise, the call will safely complete without error."]}),"\n",(0,t.jsxs)(r,{children:[(0,t.jsx)("summary",{children:"Click to expand source code"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-py",children:'import asyncio\nfrom grpclib.client import Channel\nfrom ahnlich_client_py.grpc.services.ai_service import AiServiceStub\nfrom ahnlich_client_py.grpc.ai import query as ai_query\nfrom ahnlich_client_py.grpc.algorithm.nonlinear import NonLinearAlgorithm\n\n\nasync def drop_non_linear_algorithm_index():\n  async with Channel(host="127.0.0.1", port=1370) as channel:\n      client = AiServiceStub(channel)\n      response = await client.drop_non_linear_algorithm_index(\n          ai_query.DropNonLinearAlgorithmIndex(\n              store="test store",\n              non_linear_indices=[NonLinearAlgorithm.KDTree],\n              error_if_not_exists=True\n          )\n      )\n      print(response) # Del(deleted_count=1)\n\n\nif __name__ == "__main__":\n  asyncio.run(drop_non_linear_algorithm_index())\n'})})]}),"\n",(0,t.jsx)(n.h2,{id:"behavior",children:"Behavior"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Index exists"})," \u2192 The specified algorithm index is removed from the store."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Index does not exist"})," \u2192"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(n.code,{children:"error_if_not_exists=True"}),", the operation raises an error."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(n.code,{children:"error_if_not_exists=False"}),", the request completes successfully without changes."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}}}]);