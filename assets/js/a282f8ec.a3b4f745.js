"use strict";(self.webpackChunkahnlich_web=self.webpackChunkahnlich_web||[]).push([[7142],{28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var r=t(96540);const i={},s=r.createContext(i);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:n},e.children)}},42690:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"client-libraries/go/request-ai/set","title":"Set","description":"Description","source":"@site/docs/client-libraries/go/request-ai/set.md","sourceDirName":"client-libraries/go/request-ai","slug":"/client-libraries/go/request-ai/set","permalink":"/docs/client-libraries/go/request-ai/set","draft":false,"unlisted":false,"editUrl":"https://github.com/deven96/ahnlich/tree/main/web/ahnlich-web/docs/client-libraries/go/request-ai/set.md","tags":[],"version":"current","frontMatter":{"title":"Set"},"sidebar":"docsSidebar","previous":{"title":"Create Store","permalink":"/docs/client-libraries/go/request-ai/create-store"},"next":{"title":"GetSimN","permalink":"/docs/client-libraries/go/request-ai/get-simn"}}');var i=t(74848),s=t(28453);const o={title:"Set"},c="Set",a={},l=[{value:"Description",id:"description",level:2},{value:"Source Code Example",id:"source-code-example",level:2},{value:"Behavior",id:"behavior",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"set",children:"Set"})}),"\n",(0,i.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"Set"})," request-ai ingests raw inputs (e.g., text) through the Ahnlich AI proxy. The proxy converts each raw input into an embedding using the store\u2019s configured IndexModel and persists the result\u2014together with any provided metadata\u2014into the underlying Ahnlich DB store."]}),"\n",(0,i.jsx)(n.h2,{id:"source-code-example",children:"Source Code Example"}),"\n",(0,i.jsxs)(t,{children:[(0,i.jsx)("summary",{children:"Click to expand source code"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n  "context"\n  "fmt"\n  "log"\n  "time"\n\n\n  "google.golang.org/grpc"\n  "google.golang.org/grpc/credentials/insecure"\n\n\n  aiquery "github.com/deven96/ahnlich/sdk/ahnlich-client-go/grpc/ai/query"\n  aisvc "github.com/deven96/ahnlich/sdk/ahnlich-client-go/grpc/services/ai_service"\n  keyval "github.com/deven96/ahnlich/sdk/ahnlich-client-go/grpc/keyval"\n  metadata "github.com/deven96/ahnlich/sdk/ahnlich-client-go/grpc/metadata"\n  preprocess "github.com/deven96/ahnlich/sdk/ahnlich-client-go/grpc/ai/preprocess"\n)\n\n\nconst AIAddr = "127.0.0.1:1370"\n\n\n// ---- Standalone Set Example ----\nfunc main() {\n  ctx, cancel := context.WithTimeout(context.Background(), 10*time.Second)\n  defer cancel()\n\n\n  // connect to AI server\n  conn, err := grpc.DialContext(ctx, AIAddr,\n      grpc.WithTransportCredentials(insecure.NewCredentials()),\n      grpc.WithBlock(),\n  )\n  if err != nil {\n      log.Fatalf(" Failed to connect to AI server: %v", err)\n  }\n  defer conn.Close()\n\n\n  client := aisvc.NewAIServiceClient(conn)\n\n\n  // prepare key/value input\n  inputs := []*keyval.AiStoreEntry{\n      {\n          Key: &keyval.StoreInput{\n              Value: &keyval.StoreInput_RawString{RawString: "X"},\n          },\n          Value: &keyval.StoreValue{\n              Value: map[string]*metadata.MetadataValue{\n                  "f": {Value: &metadata.MetadataValue_RawString{RawString: "v"}},\n              },\n          },\n      },\n  }\n\n\n  // perform Set operation\n  _, err = client.Set(ctx, &aiquery.Set{\n      Store:            "ai_store", // must already exist\n      Inputs:           inputs,\n      PreprocessAction: preprocess.PreprocessAction_NoPreprocessing,\n  })\n  if err != nil {\n      log.Fatalf(" Set failed: %v", err)\n  }\n\n\n  fmt.Println(" Successfully inserted key/value into ai_store01")\n}\n'})})]}),"\n",(0,i.jsx)(n.h2,{id:"behavior",children:"Behavior"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["On success, the AI proxy ",(0,i.jsx)(n.strong,{children:"embeds"})," the raw input using the store\u2019s ",(0,i.jsx)(n.strong,{children:"IndexModel"})," and ",(0,i.jsx)(n.strong,{children:"stores"})," the embedding plus metadata in the DB-backed store."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Multiple entries can be ingested by adding more items to ",(0,i.jsx)(n.code,{children:"Inputs"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["The target store (",(0,i.jsx)(n.code,{children:'"ai_store"'}),") must already exist and be configured with models in the AI proxy."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"If the request fails (e.g., store not found or server error), a non-nil error is returned."}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);