"use strict";(self.webpackChunkahnlich_web=self.webpackChunkahnlich_web||[]).push([[5487],{28453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>c});var t=r(96540);const i={},o=t.createContext(i);function l(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(o.Provider,{value:n},e.children)}},70098:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>s});const t=JSON.parse('{"id":"client-libraries/go/request-db/create-non-linear-algx","title":"Create Non-Linear Algorithm Index","description":"Description","source":"@site/docs/client-libraries/go/request-db/create-non-linear-algx.md","sourceDirName":"client-libraries/go/request-db","slug":"/client-libraries/go/request-db/create-non-linear-algx","permalink":"/docs/client-libraries/go/request-db/create-non-linear-algx","draft":false,"unlisted":false,"editUrl":"https://github.com/deven96/ahnlich/tree/main/web/ahnlich-web/docs/client-libraries/go/request-db/create-non-linear-algx.md","tags":[],"version":"current","frontMatter":{"title":"Create Non-Linear Algorithm Index"},"sidebar":"docsSidebar","previous":{"title":"List Connected Clients","permalink":"/docs/client-libraries/go/request-db/list-connected-clients"},"next":{"title":"Drop Non-Linear Algorithm Index","permalink":"/docs/client-libraries/go/request-db/drop-non-linear-algx"}}');var i=r(74848),o=r(28453);const l={title:"Create Non-Linear Algorithm Index"},c="Create Non-Linear Algorithm Index",a={},s=[{value:"Description",id:"description",level:2},{value:"Source Code Example",id:"source-code-example",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"create-non-linear-algorithm-index",children:"Create Non-Linear Algorithm Index"})}),"\n",(0,i.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"CreateNonLinearAlgorithmIndex"})," request allows you to build specialized indices for ",(0,i.jsx)(n.strong,{children:"non-linear similarity search algorithms"}),". Unlike linear approaches (such as cosine or Euclidean), non-linear algorithms (like KD-Tree) are optimized for faster and more scalable vector searches, especially as the dataset grows in size."]}),"\n",(0,i.jsx)(n.h2,{id:"source-code-example",children:"Source Code Example"}),"\n",(0,i.jsxs)(r,{children:[(0,i.jsx)("summary",{children:"Click to expand source code"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'package main\n\n\nimport (\n    "context"\n    "fmt"\n    "log"\n    "time"\n\n\n    "google.golang.org/grpc"\n    "google.golang.org/grpc/credentials/insecure"\n\n\n    dbsvc      "github.com/deven96/ahnlich/sdk/ahnlich-client-go/grpc/services/db_service"\n    dbquery    "github.com/deven96/ahnlich/sdk/ahnlich-client-go/grpc/db/query"\n    nonlinear  "github.com/deven96/ahnlich/sdk/ahnlich-client-go/grpc/algorithm/nonlinear"\n)\n\n\nconst ServerAddr = "127.0.0.1:1369"\n\n\ntype ExampleDBClient struct {\n    conn   *grpc.ClientConn\n    client dbsvc.DBServiceClient\n    ctx    context.Context\n}\n\n\nfunc NewDBClient(ctx context.Context) (*ExampleDBClient, error) {\n    conn, err := grpc.DialContext(ctx, ServerAddr, grpc.WithTransportCredentials(insecure.NewCredentials()), grpc.WithBlock())\n    if err != nil {\n        return nil, fmt.Errorf("failed to dial DB server %q: %w", ServerAddr, err)\n    }\n    client := dbsvc.NewDBServiceClient(conn)\n    return &ExampleDBClient{conn: conn, client: client, ctx: ctx}, nil\n}\n\n\nfunc (c *ExampleDBClient) Close() error {\n    return c.conn.Close()\n}\n\n\nfunc (c *ExampleDBClient) exampleCreateNonLinearAlgoIndex() error {\n    _, err := c.client.CreateNonLinearAlgorithmIndex(c.ctx, &dbquery.CreateNonLinearAlgorithmIndex{\n        Store:            "my_store",\n        NonLinearIndices: []nonlinear.NonLinearAlgorithm{nonlinear.NonLinearAlgorithm_KDTree},\n    })\n    return err\n}\n\n\nfunc main() {\n    ctx, cancel := context.WithTimeout(context.Background(), 10*time.Second)\n    defer cancel()\n\n\n    client, err := NewDBClient(ctx)\n    if err != nil {\n        log.Fatalf("Failed to create DB client: %v", err)\n    }\n    defer client.Close()\n\n\n    if err := client.exampleCreateNonLinearAlgoIndex(); err != nil {\n        log.Fatalf("CreateNonLinearAlgoIndex failed: %v", err)\n    }\n    fmt.Println("Created Non-Linear Algorithm Index for \'my_store\'")\n}\n'})})]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);