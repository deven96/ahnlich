"use strict";(self.webpackChunkahnlich_web=self.webpackChunkahnlich_web||[]).push([[8668],{1672:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"guides/rust","title":"\u26a1 Rust Image Search","description":"Source: examples/rust/image\u2011search","source":"@site/docs/guides/rust.md","sourceDirName":"guides","slug":"/guides/rust","permalink":"/docs/guides/rust","draft":false,"unlisted":false,"editUrl":"https://github.com/deven96/ahnlich/tree/main/web/ahnlich-web/docs/guides/rust.md","tags":[],"version":"current","frontMatter":{"title":"\u26a1 Rust Image Search"}}');var s=i(4848),r=i(8453);const l={title:"\u26a1 Rust Image Search"},a=void 0,o={},c=[{value:"\ud83d\udd27 What you\u2019ll learn",id:"-what-youll-learn",level:2},{value:"\ud83d\udca1 Highlighted snippet",id:"-highlighted-snippet",level:2},{value:"\u2795 Try it yourself",id:"-try-it-yourself",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Source"}),": ",(0,s.jsx)(n.a,{href:"https://github.com/deven96/ahnlich/tree/main/examples/rust/image-search",children:"examples/rust/image\u2011search"})]}),"\n",(0,s.jsxs)(n.p,{children:["This guide demonstrates building an ",(0,s.jsx)(n.strong,{children:"image-based similarity search"})," application using the Rust SDK. It covers:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Initializing ",(0,s.jsx)(n.code,{children:"ahnlich-db"})," and ",(0,s.jsx)(n.code,{children:"ahnlich-ai"})," stores"]}),"\n",(0,s.jsxs)(n.li,{children:["Ingesting image files as raw bytes into an ",(0,s.jsx)(n.strong,{children:"AI Store"})]}),"\n",(0,s.jsx)(n.li,{children:"Running similarity queries based on image embeddings"}),"\n",(0,s.jsx)(n.li,{children:"Using metadata (e.g. tags) for filtering results"}),"\n",(0,s.jsx)(n.li,{children:"Returning both vector similarity scores and original image references"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"-what-youll-learn",children:"\ud83d\udd27 What you\u2019ll learn"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Setting up an ",(0,s.jsx)(n.strong,{children:"AI Store"})," via Rust client."]}),"\n",(0,s.jsx)(n.li,{children:"Feeding images (byte streams) into the store."}),"\n",(0,s.jsx)(n.li,{children:"Querying the store with a new image file to retrieve visually similar results."}),"\n",(0,s.jsxs)(n.li,{children:["Applying metadata filters (e.g. ",(0,s.jsx)(n.code,{children:'tag == "nature"'}),")."]}),"\n",(0,s.jsx)(n.li,{children:"Understanding handling of raw input retention for display."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"-highlighted-snippet",children:"\ud83d\udca1 Highlighted snippet"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:'let mut ai_client = AIClient::new("127.0.0.1:1370".to_string()).await?;\nlet tracing_id = None;\n\n// create a store for images\nai_client.create_store(CreateStoreAI {\n    store: "image_store".to_string(),\n    index_model: AIModel::AllMiniLML6V2,\n    query_model: AIModel::AllMiniLML6V2,\n    predicates: Some(HashSet::from(["tag".to_string()])),\n    store_original: Some(true),\n    error_if_exists: Some(true),\n}, tracing_id.clone()).await?;\n\n// ingest image bytes with metadata\nai_client.set(SetAI {\n    store: "image_store".to_string(),\n    inputs: vec![\n      (StoreInput::RawBytes(img_bytes), HashMap::from([("tag".to_string(), "nature")]))\n    ],\n    preprocess_action: Some(PreprocessAction::NoPreprocessing),\n}, tracing_id.clone()).await?;\n'})}),"\n",(0,s.jsx)(n.h2,{id:"-try-it-yourself",children:"\u2795 Try it yourself"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Clone the example repository"}),"\n",(0,s.jsxs)(n.li,{children:["Launch ",(0,s.jsx)(n.code,{children:"ahnlich-db"})," and ",(0,s.jsx)(n.code,{children:"ahnlich-ai"})," locally via Docker or binaries"]}),"\n",(0,s.jsx)(n.li,{children:"Modify the image folder path and metadata tags"}),"\n",(0,s.jsx)(n.li,{children:"Build and run the Rust example app to visualize results"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var t=i(6540);const s={},r=t.createContext(s);function l(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);