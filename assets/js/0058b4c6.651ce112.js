"use strict";(self.webpackChunkahnlich_web=self.webpackChunkahnlich_web||[]).push([[849],{86164:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docsSidebar":[{"type":"link","label":"\ud83d\udccb Overview","href":"/docs/overview","docId":"overview","unlisted":false},{"type":"category","label":"\ud83d\ude80 Getting Started","items":[{"type":"link","label":"\ud83d\udce6 Installation","href":"/docs/getting-started/installation","docId":"getting-started/installation","unlisted":false},{"type":"link","label":"\ud83d\udd28 Usage","href":"/docs/getting-started/usage","docId":"getting-started/usage","unlisted":false},{"type":"link","label":"\u2696\ufe0f Comparison with other tools","href":"/docs/getting-started/comparison-with-other-tools","docId":"getting-started/comparison-with-other-tools","unlisted":false},{"type":"link","label":"\u27a1\ufe0f Next Steps","href":"/docs/getting-started/next-steps","docId":"getting-started/next-steps","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/getting-started/"},{"type":"category","label":"\ud83e\udde9 Components","items":[{"type":"category","label":"\ud83d\udcdf Ahnlich CLI","items":[{"type":"link","label":"Installation","href":"/docs/components/ahnlich-cli/installation","docId":"components/ahnlich-cli/installation","unlisted":false},{"type":"link","label":"DB Commands","href":"/docs/components/ahnlich-cli/db-commands","docId":"components/ahnlich-cli/db-commands","unlisted":false},{"type":"link","label":"AI Commands","href":"/docs/components/ahnlich-cli/ai-commands","docId":"components/ahnlich-cli/ai-commands","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/components/ahnlich-cli/"},{"type":"category","label":"\ud83d\uddc4\ufe0f Ahnlich DB","items":[{"type":"link","label":"Use Cases","href":"/docs/components/ahnlich-db/use-cases","docId":"components/ahnlich-db/use-cases","unlisted":false},{"type":"link","label":"Installation","href":"/docs/components/ahnlich-db/installation","docId":"components/ahnlich-db/installation","unlisted":false},{"type":"link","label":"Reference","href":"/docs/components/ahnlich-db/reference","docId":"components/ahnlich-db/reference","unlisted":false},{"type":"link","label":"Advanced","href":"/docs/components/ahnlich-db/advanced","docId":"components/ahnlich-db/advanced","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/components/ahnlich-db/"},{"type":"category","label":"\ud83e\udd16 Ahnlich AI","items":[{"type":"link","label":"Use Cases","href":"/docs/components/ahnlich-ai/use-cases","docId":"components/ahnlich-ai/use-cases","unlisted":false},{"type":"link","label":"Setup & Configuration","href":"/docs/components/ahnlich-ai/setup-config","docId":"components/ahnlich-ai/setup-config","unlisted":false},{"type":"link","label":"Reference","href":"/docs/components/ahnlich-ai/reference","docId":"components/ahnlich-ai/reference","unlisted":false},{"type":"link","label":"Advanced","href":"/docs/components/ahnlich-ai/advanced","docId":"components/ahnlich-ai/advanced","unlisted":false},{"type":"link","label":"Deeper Dive","href":"/docs/components/ahnlich-ai/deep-dive","docId":"components/ahnlich-ai/deep-dive","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/components/ahnlich-ai/"},{"type":"category","label":"\u267e\ufe0f Persistence In Ahnlich","items":[{"type":"link","label":"Persistence for Ahnlich DB","href":"/docs/components/persistence-in-ahnlich/persistence-for-ahnlich-db","docId":"components/persistence-in-ahnlich/persistence-for-ahnlich-db","unlisted":false},{"type":"link","label":"Persistence for Ahnlich AI","href":"/docs/components/persistence-in-ahnlich/persistence-for-ahnlich-ai","docId":"components/persistence-in-ahnlich/persistence-for-ahnlich-ai","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/components/persistence-in-ahnlich/"},{"type":"category","label":"\ud83d\udd78\ufe0f Distributed Tracing","items":[{"type":"link","label":"Tracing in Ahnlich DB","href":"/docs/components/distributed-tracing/ahnlich-db","docId":"components/distributed-tracing/ahnlich-db","unlisted":false},{"type":"link","label":"Tracing in Ahnlich AI","href":"/docs/components/distributed-tracing/ahnlich-ai","docId":"components/distributed-tracing/ahnlich-ai","unlisted":false},{"type":"link","label":"Using Jaeger","href":"/docs/components/distributed-tracing/using-jaeger","docId":"components/distributed-tracing/using-jaeger","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/components/distributed-tracing/"}],"collapsed":true,"collapsible":true,"href":"/docs/components/"},{"type":"category","label":"\ud83d\udcda Client Libraries","items":[{"type":"category","label":"\ud83d\udc0d Python","items":[{"type":"link","label":"Python Specific Resources","href":"/docs/client-libraries/python/python-specific-resources","docId":"client-libraries/python/python-specific-resources","unlisted":false},{"type":"category","label":"Request DB","items":[{"type":"link","label":"Ping","href":"/docs/client-libraries/python/request-db/ping","docId":"client-libraries/python/request-db/ping","unlisted":false},{"type":"link","label":"Info Server","href":"/docs/client-libraries/python/request-db/info-server","docId":"client-libraries/python/request-db/info-server","unlisted":false},{"type":"link","label":"List Stores","href":"/docs/client-libraries/python/request-db/list-stores","docId":"client-libraries/python/request-db/list-stores","unlisted":false},{"type":"link","label":"Create Store","href":"/docs/client-libraries/python/request-db/create-store","docId":"client-libraries/python/request-db/create-store","unlisted":false},{"type":"link","label":"Set","href":"/docs/client-libraries/python/request-db/set","docId":"client-libraries/python/request-db/set","unlisted":false},{"type":"link","label":"GetSimN","href":"/docs/client-libraries/python/request-db/get-simn","docId":"client-libraries/python/request-db/get-simn","unlisted":false},{"type":"link","label":"GetKey","href":"/docs/client-libraries/python/request-db/get-key","docId":"client-libraries/python/request-db/get-key","unlisted":false},{"type":"link","label":"Get by Predicate","href":"/docs/client-libraries/python/request-db/get-by-predicate","docId":"client-libraries/python/request-db/get-by-predicate","unlisted":false},{"type":"link","label":"Create Predicate Index","href":"/docs/client-libraries/python/request-db/create-predicate-index","docId":"client-libraries/python/request-db/create-predicate-index","unlisted":false},{"type":"link","label":"Drop Predicate Index","href":"/docs/client-libraries/python/request-db/drop-predicate-index","docId":"client-libraries/python/request-db/drop-predicate-index","unlisted":false},{"type":"link","label":"Delete Key","href":"/docs/client-libraries/python/request-db/delete-key","docId":"client-libraries/python/request-db/delete-key","unlisted":false},{"type":"link","label":"Drop Store","href":"/docs/client-libraries/python/request-db/drop-store","docId":"client-libraries/python/request-db/drop-store","unlisted":false},{"type":"link","label":"Create Non-Linear Algorithm Index","href":"/docs/client-libraries/python/request-db/create-non-linear-algx","docId":"client-libraries/python/request-db/create-non-linear-algx","unlisted":false},{"type":"link","label":"Drop Non-Linear Algorithm Index","href":"/docs/client-libraries/python/request-db/drop-non-linear-algx","docId":"client-libraries/python/request-db/drop-non-linear-algx","unlisted":false},{"type":"link","label":"Delete Predicate","href":"/docs/client-libraries/python/request-db/delete-predicate","docId":"client-libraries/python/request-db/delete-predicate","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/client-libraries/python/request-db/"},{"type":"category","label":"Request AI","items":[{"type":"link","label":"Ping","href":"/docs/client-libraries/python/request-ai/ping","docId":"client-libraries/python/request-ai/ping","unlisted":false},{"type":"link","label":"Info Server","href":"/docs/client-libraries/python/request-ai/info-server","docId":"client-libraries/python/request-ai/info-server","unlisted":false},{"type":"link","label":"List Stores","href":"/docs/client-libraries/python/request-ai/list-stores","docId":"client-libraries/python/request-ai/list-stores","unlisted":false},{"type":"link","label":"Create Store","href":"/docs/client-libraries/python/request-ai/create-store","docId":"client-libraries/python/request-ai/create-store","unlisted":false},{"type":"link","label":"Set","href":"/docs/client-libraries/python/request-ai/set","docId":"client-libraries/python/request-ai/set","unlisted":false},{"type":"link","label":"GetSimN","href":"/docs/client-libraries/python/request-ai/get-simn","docId":"client-libraries/python/request-ai/get-simn","unlisted":false},{"type":"link","label":"Get by Predicate","href":"/docs/client-libraries/python/request-ai/get-by-predicate","docId":"client-libraries/python/request-ai/get-by-predicate","unlisted":false},{"type":"link","label":"Create Predicate Index","href":"/docs/client-libraries/python/request-ai/create-predicate-index","docId":"client-libraries/python/request-ai/create-predicate-index","unlisted":false},{"type":"link","label":"Drop Predicate Index","href":"/docs/client-libraries/python/request-ai/drop-predicate-index","docId":"client-libraries/python/request-ai/drop-predicate-index","unlisted":false},{"type":"link","label":"Delete Key","href":"/docs/client-libraries/python/request-ai/delete-key","docId":"client-libraries/python/request-ai/delete-key","unlisted":false},{"type":"link","label":"Drop Store","href":"/docs/client-libraries/python/request-ai/drop-store","docId":"client-libraries/python/request-ai/drop-store","unlisted":false},{"type":"link","label":"Create Non-Linear algorithm Index","href":"/docs/client-libraries/python/request-ai/create-non-linear-algx","docId":"client-libraries/python/request-ai/create-non-linear-algx","unlisted":false},{"type":"link","label":"Drop Non-Linear Algorithm Index","href":"/docs/client-libraries/python/request-ai/drop-non-linear-algx","docId":"client-libraries/python/request-ai/drop-non-linear-algx","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/client-libraries/python/request-ai/"},{"type":"link","label":"Bulk Requests","href":"/docs/client-libraries/python/bulk-requests","docId":"client-libraries/python/bulk-requests","unlisted":false},{"type":"link","label":"Type Meanings","href":"/docs/client-libraries/python/type-meanings","docId":"client-libraries/python/type-meanings","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/client-libraries/python/"},{"type":"category","label":"\u2699\ufe0f Go","items":[{"type":"link","label":"Go Specific Resources","href":"/docs/client-libraries/go/go-specific-resources","docId":"client-libraries/go/go-specific-resources","unlisted":false},{"type":"category","label":"Request DB","items":[{"type":"link","label":"Ping","href":"/docs/client-libraries/go/request-db/ping","docId":"client-libraries/go/request-db/ping","unlisted":false},{"type":"link","label":"Info Server","href":"/docs/client-libraries/go/request-db/info-server","docId":"client-libraries/go/request-db/info-server","unlisted":false},{"type":"link","label":"List Stores","href":"/docs/client-libraries/go/request-db/list-stores","docId":"client-libraries/go/request-db/list-stores","unlisted":false},{"type":"link","label":"Create Store","href":"/docs/client-libraries/go/request-db/create-store","docId":"client-libraries/go/request-db/create-store","unlisted":false},{"type":"link","label":"Set","href":"/docs/client-libraries/go/request-db/set","docId":"client-libraries/go/request-db/set","unlisted":false},{"type":"link","label":"GetSimN","href":"/docs/client-libraries/go/request-db/get-simn","docId":"client-libraries/go/request-db/get-simn","unlisted":false},{"type":"link","label":"GetKey","href":"/docs/client-libraries/go/request-db/get-key","docId":"client-libraries/go/request-db/get-key","unlisted":false},{"type":"link","label":"Get by Predicate","href":"/docs/client-libraries/go/request-db/get-by-predicate","docId":"client-libraries/go/request-db/get-by-predicate","unlisted":false},{"type":"link","label":"Create Predicate Index","href":"/docs/client-libraries/go/request-db/create-predicate-index","docId":"client-libraries/go/request-db/create-predicate-index","unlisted":false},{"type":"link","label":"Drop Predicate Index","href":"/docs/client-libraries/go/request-db/drop-predicate-index","docId":"client-libraries/go/request-db/drop-predicate-index","unlisted":false},{"type":"link","label":"Delete Key","href":"/docs/client-libraries/go/request-db/delete-key","docId":"client-libraries/go/request-db/delete-key","unlisted":false},{"type":"link","label":"Drop Store","href":"/docs/client-libraries/go/request-db/drop-store","docId":"client-libraries/go/request-db/drop-store","unlisted":false},{"type":"link","label":"List Connected Clients","href":"/docs/client-libraries/go/request-db/list-connected-clients","docId":"client-libraries/go/request-db/list-connected-clients","unlisted":false},{"type":"link","label":"Create Non-Linear Algorithm Index","href":"/docs/client-libraries/go/request-db/create-non-linear-algx","docId":"client-libraries/go/request-db/create-non-linear-algx","unlisted":false},{"type":"link","label":"Drop Non-Linear Algorithm Index","href":"/docs/client-libraries/go/request-db/drop-non-linear-algx","docId":"client-libraries/go/request-db/drop-non-linear-algx","unlisted":false},{"type":"link","label":"Delete Predicate","href":"/docs/client-libraries/go/request-db/delete-predicate","docId":"client-libraries/go/request-db/delete-predicate","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/client-libraries/go/request-db/"},{"type":"category","label":"Request AI","items":[{"type":"link","label":"Ping","href":"/docs/client-libraries/go/request-ai/ping","docId":"client-libraries/go/request-ai/ping","unlisted":false},{"type":"link","label":"Info Server","href":"/docs/client-libraries/go/request-ai/info-server","docId":"client-libraries/go/request-ai/info-server","unlisted":false},{"type":"link","label":"List Stores","href":"/docs/client-libraries/go/request-ai/list-stores","docId":"client-libraries/go/request-ai/list-stores","unlisted":false},{"type":"link","label":"Create Store","href":"/docs/client-libraries/go/request-ai/create-store","docId":"client-libraries/go/request-ai/create-store","unlisted":false},{"type":"link","label":"Set","href":"/docs/client-libraries/go/request-ai/set","docId":"client-libraries/go/request-ai/set","unlisted":false},{"type":"link","label":"GetSimN","href":"/docs/client-libraries/go/request-ai/get-simn","docId":"client-libraries/go/request-ai/get-simn","unlisted":false},{"type":"link","label":"Get by Predicate","href":"/docs/client-libraries/go/request-ai/get-by-predicate","docId":"client-libraries/go/request-ai/get-by-predicate","unlisted":false},{"type":"link","label":"Create Predicate Index","href":"/docs/client-libraries/go/request-ai/create-predicate-index","docId":"client-libraries/go/request-ai/create-predicate-index","unlisted":false},{"type":"link","label":"Drop Predicate Index","href":"/docs/client-libraries/go/request-ai/drop-predicate-index","docId":"client-libraries/go/request-ai/drop-predicate-index","unlisted":false},{"type":"link","label":"Delete Key","href":"/docs/client-libraries/go/request-ai/delete-key","docId":"client-libraries/go/request-ai/delete-key","unlisted":false},{"type":"link","label":"Drop Store","href":"/docs/client-libraries/go/request-ai/drop-store","docId":"client-libraries/go/request-ai/drop-store","unlisted":false},{"type":"link","label":"Create Non-Linear algorithm Index","href":"/docs/client-libraries/go/request-ai/create-non-linear-algx","docId":"client-libraries/go/request-ai/create-non-linear-algx","unlisted":false},{"type":"link","label":"Drop Non-Linear Algorithm Index","href":"/docs/client-libraries/go/request-ai/drop-non-linear-algx","docId":"client-libraries/go/request-ai/drop-non-linear-algx","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/client-libraries/go/request-ai/"},{"type":"link","label":"Bulk Requests","href":"/docs/client-libraries/go/bulk-requests","docId":"client-libraries/go/bulk-requests","unlisted":false},{"type":"link","label":"Type Meanings","href":"/docs/client-libraries/go/type-meanings","docId":"client-libraries/go/type-meanings","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/client-libraries/go/"},{"type":"category","label":"\u2699\ufe0f Rust","items":[{"type":"link","label":"Rust Specific Resources","href":"/docs/client-libraries/rust/rust-specific-resources","docId":"client-libraries/rust/rust-specific-resources","unlisted":false},{"type":"category","label":"Request DB","items":[{"type":"link","label":"Ping","href":"/docs/client-libraries/rust/request-db/ping","docId":"client-libraries/rust/request-db/ping","unlisted":false},{"type":"link","label":"Info Server","href":"/docs/client-libraries/rust/request-db/info-server","docId":"client-libraries/rust/request-db/info-server","unlisted":false},{"type":"link","label":"List Stores","href":"/docs/client-libraries/rust/request-db/list-stores","docId":"client-libraries/rust/request-db/list-stores","unlisted":false},{"type":"link","label":"Create Store","href":"/docs/client-libraries/rust/request-db/create-store","docId":"client-libraries/rust/request-db/create-store","unlisted":false},{"type":"link","label":"Set","href":"/docs/client-libraries/rust/request-db/set","docId":"client-libraries/rust/request-db/set","unlisted":false},{"type":"link","label":"Get Sim N","href":"/docs/client-libraries/rust/request-db/get-simn","docId":"client-libraries/rust/request-db/get-simn","unlisted":false},{"type":"link","label":"Get Key","href":"/docs/client-libraries/rust/request-db/get-key","docId":"client-libraries/rust/request-db/get-key","unlisted":false},{"type":"link","label":"Get By Predicate","href":"/docs/client-libraries/rust/request-db/get-by-predicate","docId":"client-libraries/rust/request-db/get-by-predicate","unlisted":false},{"type":"link","label":"Create Predicate Index","href":"/docs/client-libraries/rust/request-db/create-predicate-index","docId":"client-libraries/rust/request-db/create-predicate-index","unlisted":false},{"type":"link","label":"Drop Predicate Index","href":"/docs/client-libraries/rust/request-db/drop-predicate-index","docId":"client-libraries/rust/request-db/drop-predicate-index","unlisted":false},{"type":"link","label":"Delete Key","href":"/docs/client-libraries/rust/request-db/delete-key","docId":"client-libraries/rust/request-db/delete-key","unlisted":false},{"type":"link","label":"Drop Store","href":"/docs/client-libraries/rust/request-db/drop-store","docId":"client-libraries/rust/request-db/drop-store","unlisted":false},{"type":"link","label":"List Connected Clients","href":"/docs/client-libraries/rust/request-db/list-connected-clients","docId":"client-libraries/rust/request-db/list-connected-clients","unlisted":false},{"type":"link","label":"Create Non-Linear Algorithm Index","href":"/docs/client-libraries/rust/request-db/create-non-linear-algx","docId":"client-libraries/rust/request-db/create-non-linear-algx","unlisted":false},{"type":"link","label":"Drop Non-Linear Algorithm Index","href":"/docs/client-libraries/rust/request-db/drop-non-linear-algx","docId":"client-libraries/rust/request-db/drop-non-linear-algx","unlisted":false},{"type":"link","label":"Delete By Predicate","href":"/docs/client-libraries/rust/request-db/delete-by-predicate","docId":"client-libraries/rust/request-db/delete-by-predicate","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/client-libraries/rust/request-db/"},{"type":"category","label":"Request AI","items":[{"type":"link","label":"Ping","href":"/docs/client-libraries/rust/request-ai/ping","docId":"client-libraries/rust/request-ai/ping","unlisted":false},{"type":"link","label":"Info Server","href":"/docs/client-libraries/rust/request-ai/info-server","docId":"client-libraries/rust/request-ai/info-server","unlisted":false},{"type":"link","label":"List Store","href":"/docs/client-libraries/rust/request-ai/list-stores","docId":"client-libraries/rust/request-ai/list-stores","unlisted":false},{"type":"link","label":"Create Store","href":"/docs/client-libraries/rust/request-ai/create-store","docId":"client-libraries/rust/request-ai/create-store","unlisted":false},{"type":"link","label":"Set","href":"/docs/client-libraries/rust/request-ai/set","docId":"client-libraries/rust/request-ai/set","unlisted":false},{"type":"link","label":"Get Sim N","href":"/docs/client-libraries/rust/request-ai/get-simn","docId":"client-libraries/rust/request-ai/get-simn","unlisted":false},{"type":"link","label":"Get Key","href":"/docs/client-libraries/rust/request-ai/get-key","docId":"client-libraries/rust/request-ai/get-key","unlisted":false},{"type":"link","label":"Get By Predicate","href":"/docs/client-libraries/rust/request-ai/get-by-predicate","docId":"client-libraries/rust/request-ai/get-by-predicate","unlisted":false},{"type":"link","label":"Create Predicate Index","href":"/docs/client-libraries/rust/request-ai/create-predicate-index","docId":"client-libraries/rust/request-ai/create-predicate-index","unlisted":false},{"type":"link","label":"Drop Predicate Index","href":"/docs/client-libraries/rust/request-ai/drop-predicate-index","docId":"client-libraries/rust/request-ai/drop-predicate-index","unlisted":false},{"type":"link","label":"Delete Key","href":"/docs/client-libraries/rust/request-ai/delete-key","docId":"client-libraries/rust/request-ai/delete-key","unlisted":false},{"type":"link","label":"Drop Store","href":"/docs/client-libraries/rust/request-ai/drop-store","docId":"client-libraries/rust/request-ai/drop-store","unlisted":false},{"type":"link","label":"List Connected Clients","href":"/docs/client-libraries/rust/request-ai/list-connected-clients","docId":"client-libraries/rust/request-ai/list-connected-clients","unlisted":false},{"type":"link","label":"Create Non-Linear Algorithm Index","href":"/docs/client-libraries/rust/request-ai/create-non-linear-algx","docId":"client-libraries/rust/request-ai/create-non-linear-algx","unlisted":false},{"type":"link","label":"Drop Non-Linear Algorithm Index","href":"/docs/client-libraries/rust/request-ai/drop-non-linear-algx","docId":"client-libraries/rust/request-ai/drop-non-linear-algx","unlisted":false},{"type":"link","label":"New","href":"/docs/client-libraries/rust/request-ai/new","docId":"client-libraries/rust/request-ai/new","unlisted":false},{"type":"link","label":"Purge Stores","href":"/docs/client-libraries/rust/request-ai/purge-stores","docId":"client-libraries/rust/request-ai/purge-stores","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/client-libraries/rust/request-ai/"},{"type":"link","label":"Pipeline","href":"/docs/client-libraries/rust/pipeline","docId":"client-libraries/rust/pipeline","unlisted":false},{"type":"link","label":"Type & Utilities","href":"/docs/client-libraries/rust/types-and-utilities","docId":"client-libraries/rust/types-and-utilities","unlisted":false},{"type":"link","label":"Testing","href":"/docs/client-libraries/rust/testing","docId":"client-libraries/rust/testing","unlisted":false},{"type":"link","label":"Distributed Tracing","href":"/docs/client-libraries/rust/distributed-tracing","docId":"client-libraries/rust/distributed-tracing","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/client-libraries/rust/"}],"collapsed":true,"collapsible":true,"href":"/docs/client-libraries/"},{"type":"category","label":"\u26a1Ahnlich in production","items":[{"type":"link","label":"Deployment","href":"/docs/ahnlich-in-production/deployment","docId":"ahnlich-in-production/deployment","unlisted":false},{"type":"link","label":"Tracing","href":"/docs/ahnlich-in-production/tracing","docId":"ahnlich-in-production/tracing","unlisted":false},{"type":"link","label":"\u26a1Ahnlich in production","href":"/docs/ahnlich-in-production/","docId":"ahnlich-in-production/ahnlich-in-production","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"link","label":"\ud83c\udfdb\ufe0f Architecture","href":"/docs/architecture","docId":"architecture","unlisted":false},{"type":"link","label":"\ud83c\udf0d Community","href":"/docs/community","docId":"community","unlisted":false}]},"docs":{"ahnlich-in-production/ahnlich-in-production":{"id":"ahnlich-in-production/ahnlich-in-production","title":"\u26a1Ahnlich in production","description":"","sidebar":"docsSidebar"},"ahnlich-in-production/deployment":{"id":"ahnlich-in-production/deployment","title":"Deployment","description":"","sidebar":"docsSidebar"},"ahnlich-in-production/tracing":{"id":"ahnlich-in-production/tracing","title":"Tracing","description":"Distributed Tracing","sidebar":"docsSidebar"},"architecture":{"id":"architecture","title":"\ud83c\udfdb\ufe0f Architecture","description":"Status: Alpha / testing \u2013 subject to breaking changes.","sidebar":"docsSidebar"},"client-libraries/client-libraries":{"id":"client-libraries/client-libraries","title":"Client libraries","description":"","sidebar":"docsSidebar"},"client-libraries/go/bulk-requests":{"id":"client-libraries/go/bulk-requests","title":"Bulk Requests","description":"Description","sidebar":"docsSidebar"},"client-libraries/go/go":{"id":"client-libraries/go/go","title":"Go","description":"Build Ahnlich Applications with the Go SDK \u2013 Vector Storage, Search, and AI tooling.","sidebar":"docsSidebar"},"client-libraries/go/go-specific-resources":{"id":"client-libraries/go/go-specific-resources","title":"Go Specific Resources","description":"QuickStart - Setup","sidebar":"docsSidebar"},"client-libraries/go/request-ai/create-non-linear-algx":{"id":"client-libraries/go/request-ai/create-non-linear-algx","title":"Create Non-Linear algorithm Index","description":"Description","sidebar":"docsSidebar"},"client-libraries/go/request-ai/create-predicate-index":{"id":"client-libraries/go/request-ai/create-predicate-index","title":"Create Predicate Index","description":"Description","sidebar":"docsSidebar"},"client-libraries/go/request-ai/create-store":{"id":"client-libraries/go/request-ai/create-store","title":"Create Store","description":"Description","sidebar":"docsSidebar"},"client-libraries/go/request-ai/delete-key":{"id":"client-libraries/go/request-ai/delete-key","title":"Delete Key","description":"Description","sidebar":"docsSidebar"},"client-libraries/go/request-ai/drop-non-linear-algx":{"id":"client-libraries/go/request-ai/drop-non-linear-algx","title":"Drop Non-Linear Algorithm Index","description":"Description","sidebar":"docsSidebar"},"client-libraries/go/request-ai/drop-predicate-index":{"id":"client-libraries/go/request-ai/drop-predicate-index","title":"Drop Predicate Index","description":"Description","sidebar":"docsSidebar"},"client-libraries/go/request-ai/drop-store":{"id":"client-libraries/go/request-ai/drop-store","title":"Drop Store","description":"Description","sidebar":"docsSidebar"},"client-libraries/go/request-ai/get-by-predicate":{"id":"client-libraries/go/request-ai/get-by-predicate","title":"Get by Predicate","description":"Description","sidebar":"docsSidebar"},"client-libraries/go/request-ai/get-simn":{"id":"client-libraries/go/request-ai/get-simn","title":"GetSimN","description":"Description","sidebar":"docsSidebar"},"client-libraries/go/request-ai/info-server":{"id":"client-libraries/go/request-ai/info-server","title":"Info Server","description":"Description","sidebar":"docsSidebar"},"client-libraries/go/request-ai/list-stores":{"id":"client-libraries/go/request-ai/list-stores","title":"List Stores","description":"Description","sidebar":"docsSidebar"},"client-libraries/go/request-ai/ping":{"id":"client-libraries/go/request-ai/ping","title":"Ping","description":"Description","sidebar":"docsSidebar"},"client-libraries/go/request-ai/request-ai":{"id":"client-libraries/go/request-ai/request-ai","title":"Request AI","description":"Ahnlich Request-ai: AI proxy to communicate with ahnlich-db, receiving raw input, transforming it into embeddings, and storing those embeddings within the DB. It extends DB capabilities by allowing developers to issue queries to the same store using raw inputs such as images or text. The AI proxy features multiple off-the-shelf models which can be selected for both store indexing and query time.","sidebar":"docsSidebar"},"client-libraries/go/request-ai/set":{"id":"client-libraries/go/request-ai/set","title":"Set","description":"Description","sidebar":"docsSidebar"},"client-libraries/go/request-db/create-non-linear-algx":{"id":"client-libraries/go/request-db/create-non-linear-algx","title":"Create Non-Linear Algorithm Index","description":"Description","sidebar":"docsSidebar"},"client-libraries/go/request-db/create-predicate-index":{"id":"client-libraries/go/request-db/create-predicate-index","title":"Create Predicate Index","description":"Description","sidebar":"docsSidebar"},"client-libraries/go/request-db/create-store":{"id":"client-libraries/go/request-db/create-store","title":"Create Store","description":"Description","sidebar":"docsSidebar"},"client-libraries/go/request-db/delete-key":{"id":"client-libraries/go/request-db/delete-key","title":"Delete Key","description":"Description","sidebar":"docsSidebar"},"client-libraries/go/request-db/delete-predicate":{"id":"client-libraries/go/request-db/delete-predicate","title":"Delete Predicate","description":"Description","sidebar":"docsSidebar"},"client-libraries/go/request-db/drop-non-linear-algx":{"id":"client-libraries/go/request-db/drop-non-linear-algx","title":"Drop Non-Linear Algorithm Index","description":"Description","sidebar":"docsSidebar"},"client-libraries/go/request-db/drop-predicate-index":{"id":"client-libraries/go/request-db/drop-predicate-index","title":"Drop Predicate Index","description":"Description","sidebar":"docsSidebar"},"client-libraries/go/request-db/drop-store":{"id":"client-libraries/go/request-db/drop-store","title":"Drop Store","description":"Description","sidebar":"docsSidebar"},"client-libraries/go/request-db/get-by-predicate":{"id":"client-libraries/go/request-db/get-by-predicate","title":"Get by Predicate","description":"Description","sidebar":"docsSidebar"},"client-libraries/go/request-db/get-key":{"id":"client-libraries/go/request-db/get-key","title":"GetKey","description":"Description","sidebar":"docsSidebar"},"client-libraries/go/request-db/get-simn":{"id":"client-libraries/go/request-db/get-simn","title":"GetSimN","description":"Description","sidebar":"docsSidebar"},"client-libraries/go/request-db/info-server":{"id":"client-libraries/go/request-db/info-server","title":"Info Server","description":"Description","sidebar":"docsSidebar"},"client-libraries/go/request-db/list-connected-clients":{"id":"client-libraries/go/request-db/list-connected-clients","title":"List Connected Clients","description":"Description","sidebar":"docsSidebar"},"client-libraries/go/request-db/list-stores":{"id":"client-libraries/go/request-db/list-stores","title":"List Stores","description":"Description","sidebar":"docsSidebar"},"client-libraries/go/request-db/ping":{"id":"client-libraries/go/request-db/ping","title":"Ping","description":"Description","sidebar":"docsSidebar"},"client-libraries/go/request-db/request-db":{"id":"client-libraries/go/request-db/request-db","title":"Request DB","description":"The Ahnlich DB is an in-memory vector key\u2013value store designed for storing embeddings or vectors alongside their metadata (key\u2013value maps).","sidebar":"docsSidebar"},"client-libraries/go/request-db/set":{"id":"client-libraries/go/request-db/set","title":"Set","description":"Description","sidebar":"docsSidebar"},"client-libraries/go/type-meanings":{"id":"client-libraries/go/type-meanings","title":"Type Meanings","description":"Key concepts and their meanings in the SDK:","sidebar":"docsSidebar"},"client-libraries/python/bulk-requests":{"id":"client-libraries/python/bulk-requests","title":"Bulk Requests","description":"The AI client supports bulk requests, allowing you to send multiple operations at once. Instead of sending each request individually, you can batch them using a pipeline builder.","sidebar":"docsSidebar"},"client-libraries/python/python":{"id":"client-libraries/python/python","title":"Python","description":"Build Ahnlich Applications with the Python SDK \u2013 Vector Storage, Search, and AI tooling.","sidebar":"docsSidebar"},"client-libraries/python/python-specific-resources":{"id":"client-libraries/python/python-specific-resources","title":"Python Specific Resources","description":"QuickStart","sidebar":"docsSidebar"},"client-libraries/python/request-ai/create-non-linear-algx":{"id":"client-libraries/python/request-ai/create-non-linear-algx","title":"Create Non-Linear algorithm Index","description":"The Create Non Linear Algorithm Index operation builds an index structure for non-linear search algorithms, such as KD-Tree. These index enable faster query performance in high-dimensional vector spaces by avoiding brute-force scans.","sidebar":"docsSidebar"},"client-libraries/python/request-ai/create-predicate-index":{"id":"client-libraries/python/request-ai/create-predicate-index","title":"Create Predicate Index","description":"Predicate indices allow the AI store to efficiently filter results based on metadata fields. Use this operation to define which metadata keys should be indexed for faster query operations like GetPred.","sidebar":"docsSidebar"},"client-libraries/python/request-ai/create-store":{"id":"client-libraries/python/request-ai/create-store","title":"Create Store","description":"The CreateStore request is used to initialize a new AI-powered store.","sidebar":"docsSidebar"},"client-libraries/python/request-ai/delete-key":{"id":"client-libraries/python/request-ai/delete-key","title":"Delete Key","description":"How to delete a key and its associated value from a store using the Ahnlich AI Client.","sidebar":"docsSidebar"},"client-libraries/python/request-ai/drop-non-linear-algx":{"id":"client-libraries/python/request-ai/drop-non-linear-algx","title":"Drop Non-Linear Algorithm Index","description":"The Drop Non Linear Algorithm Index operation removes an index that was previously created for non-linear algorithms such as KD-Tree . These indices are typically used to accelerate similarity searches in high-dimensional spaces.","sidebar":"docsSidebar"},"client-libraries/python/request-ai/drop-predicate-index":{"id":"client-libraries/python/request-ai/drop-predicate-index","title":"Drop Predicate Index","description":"Predicate index allow for efficient querying based on metadata fields. You can drop either a single predicate index or multiple predicate indices depending on your needs.","sidebar":"docsSidebar"},"client-libraries/python/request-ai/drop-store":{"id":"client-libraries/python/request-ai/drop-store","title":"Drop Store","description":"The Drop Store request removes an entire AI store and all its contents.","sidebar":"docsSidebar"},"client-libraries/python/request-ai/get-by-predicate":{"id":"client-libraries/python/request-ai/get-by-predicate","title":"Get by Predicate","description":"GetPred works similarly to Get_key, but instead of querying by a single key, it returns results that match the defined conditions. This allows filtering AI store entries by metadata values.","sidebar":"docsSidebar"},"client-libraries/python/request-ai/get-simn":{"id":"client-libraries/python/request-ai/get-simn","title":"GetSimN","description":"How to retrieve the top N most similar entries from an AI store using the Ahnlich Python SDK.","sidebar":"docsSidebar"},"client-libraries/python/request-ai/info-server":{"id":"client-libraries/python/request-ai/info-server","title":"Info Server","description":"How to request server information from the Ahnlich AI Service using the Python client.","sidebar":"docsSidebar"},"client-libraries/python/request-ai/list-stores":{"id":"client-libraries/python/request-ai/list-stores","title":"List Stores","description":"How to request a list of available vector stores from the Ahnlich AI Service using the Python client.","sidebar":"docsSidebar"},"client-libraries/python/request-ai/ping":{"id":"client-libraries/python/request-ai/ping","title":"Ping","description":"The Ping request verifies connectivity with the AI Service.","sidebar":"docsSidebar"},"client-libraries/python/request-ai/request-ai":{"id":"client-libraries/python/request-ai/request-ai","title":"Request AI","description":"The Ahnlich AI Client provides intelligent services that extend the capabilities of the DB client.","sidebar":"docsSidebar"},"client-libraries/python/request-ai/set":{"id":"client-libraries/python/request-ai/set","title":"Set","description":"The Set request is used to insert or update entries inside an AI-powered store.","sidebar":"docsSidebar"},"client-libraries/python/request-db/create-non-linear-algx":{"id":"client-libraries/python/request-db/create-non-linear-algx","title":"Create Non-Linear Algorithm Index","description":"Creating non-linear algorithm indexes allows you to optimize query execution based on spatial or high-dimensional data structures.","sidebar":"docsSidebar"},"client-libraries/python/request-db/create-predicate-index":{"id":"client-libraries/python/request-db/create-predicate-index","title":"Create Predicate Index","description":"The CreatePredIndex request creates an index on one or more metadata fields.","sidebar":"docsSidebar"},"client-libraries/python/request-db/create-store":{"id":"client-libraries/python/request-db/create-store","title":"Create Store","description":"A Store in Ahnlich is like a logical dataset or collection. Each store holds vectors and their associated metadata, allowing you to organize data by application, environment, or project.","sidebar":"docsSidebar"},"client-libraries/python/request-db/delete-key":{"id":"client-libraries/python/request-db/delete-key","title":"Delete Key","description":"This request removes one or more keys (and their associated values) from a store.","sidebar":"docsSidebar"},"client-libraries/python/request-db/delete-predicate":{"id":"client-libraries/python/request-db/delete-predicate","title":"Delete Predicate","description":"This request removes all entries in a store that match a specified predicate condition.","sidebar":"docsSidebar"},"client-libraries/python/request-db/drop-non-linear-algx":{"id":"client-libraries/python/request-db/drop-non-linear-algx","title":"Drop Non-Linear Algorithm Index","description":"This request removes one or more non-linear algorithm indexes from a store.","sidebar":"docsSidebar"},"client-libraries/python/request-db/drop-predicate-index":{"id":"client-libraries/python/request-db/drop-predicate-index","title":"Drop Predicate Index","description":"The DropPredIndex request removes an index from one or more metadata fields.","sidebar":"docsSidebar"},"client-libraries/python/request-db/drop-store":{"id":"client-libraries/python/request-db/drop-store","title":"Drop Store","description":"The Drop Store request permanently deletes a store and all its contents.","sidebar":"docsSidebar"},"client-libraries/python/request-db/get-by-predicate":{"id":"client-libraries/python/request-db/get-by-predicate","title":"Get by Predicate","description":"The GetPred request retrieves entries based on metadata conditions (predicates).","sidebar":"docsSidebar"},"client-libraries/python/request-db/get-key":{"id":"client-libraries/python/request-db/get-key","title":"GetKey","description":"The GetKey request retrieves entries from a store based on an exact vector key match.","sidebar":"docsSidebar"},"client-libraries/python/request-db/get-simn":{"id":"client-libraries/python/request-db/get-simn","title":"GetSimN","description":"The GetSimN request performs a similarity search.","sidebar":"docsSidebar"},"client-libraries/python/request-db/info-server":{"id":"client-libraries/python/request-db/info-server","title":"Info Server","description":"The Info Server request retrieves metadata about the running DB server, including the binary version and server type (DB, AI, or Hybrid). This is useful for environment validation, feature gating, and diagnostics.","sidebar":"docsSidebar"},"client-libraries/python/request-db/list-stores":{"id":"client-libraries/python/request-db/list-stores","title":"List Stores","description":"The List Stores request retrieves the set of Stores currently registered on the DB server. Each Store corresponds to a logical container of vectors. This operation is commonly used for introspection, administrative tooling, and debugging.","sidebar":"docsSidebar"},"client-libraries/python/request-db/ping":{"id":"client-libraries/python/request-db/ping","title":"Ping","description":"The Ping request is used to test the connectivity between the Python client and the Ahnlich DB server.","sidebar":"docsSidebar"},"client-libraries/python/request-db/request-db":{"id":"client-libraries/python/request-db/request-db","title":"Request DB","description":"The Ahnlich DB Client is the foundation of the system, designed to efficiently manage, query, and retrieve vector embeddings. It provides all the tools needed to build applications that rely on vector similarity, metadata filtering, and structured querying.","sidebar":"docsSidebar"},"client-libraries/python/request-db/set":{"id":"client-libraries/python/request-db/set","title":"Set","description":"The Set request inserts or updates vector entries inside a store. Each entry is defined by:","sidebar":"docsSidebar"},"client-libraries/python/type-meanings":{"id":"client-libraries/python/type-meanings","title":"Type Meanings","description":"The following terms are fundamental to how Ahnlich AI requests are structured and processed.","sidebar":"docsSidebar"},"client-libraries/rust/distributed-tracing":{"id":"client-libraries/rust/distributed-tracing","title":"Distributed Tracing","description":"The clients support W3C Trace Context via optional traceparent headers, enabling distributed tracing across microservices.","sidebar":"docsSidebar"},"client-libraries/rust/pipeline":{"id":"client-libraries/rust/pipeline","title":"Pipeline","description":"Creates a new AI pipeline for batching multiple operations in the AI client. Pipelines allow you to queue multiple requests (e.g., set, getsimn, get_key) and execute them in sequence, ensuring consistent ordering and efficient handling of AI service calls. This is particularly useful for bulk processing or workflows that require multiple embeddings or queries to be executed together.","sidebar":"docsSidebar"},"client-libraries/rust/request-ai/create-non-linear-algx":{"id":"client-libraries/rust/request-ai/create-non-linear-algx","title":"Create Non-Linear Algorithm Index","description":"Creates a non-linear algorithm index on a vector store within the AI service to optimize similarity search performance. These indexes accelerate nearest-neighbor and semantic searches over large embedding datasets, making retrieval faster and more efficient.","sidebar":"docsSidebar"},"client-libraries/rust/request-ai/create-predicate-index":{"id":"client-libraries/rust/request-ai/create-predicate-index","title":"Create Predicate Index","description":"Creates a predicate index in the AI service to optimize filtered embedding queries. Speeds up retrieval of embeddings based on metadata constraints, improving the performance of get_pred operations.","sidebar":"docsSidebar"},"client-libraries/rust/request-ai/create-store":{"id":"client-libraries/rust/request-ai/create-store","title":"Create Store","description":"Creates a new vector store within the AI service. A store acts as a container for embeddings and metadata, enabling structured organization of data for similarity search and retrieval tasks. This is typically the first step before inserting embeddings or performing queries against a specific dataset.","sidebar":"docsSidebar"},"client-libraries/rust/request-ai/delete-key":{"id":"client-libraries/rust/request-ai/delete-key","title":"Delete Key","description":"Deletes a specific embedding and its associated metadata from a vector store in the AI service. This operation is useful for removing obsolete or incorrect embeddings, ensuring that similarity searches and AI queries return only relevant results.","sidebar":"docsSidebar"},"client-libraries/rust/request-ai/drop-non-linear-algx":{"id":"client-libraries/rust/request-ai/drop-non-linear-algx","title":"Drop Non-Linear Algorithm Index","description":"Removes a non-linear algorithm index from a vector store in the AI service. This operation is useful when the index is no longer needed, when changing algorithm parameters, or when rebuilding the index for updated embedding datasets. Removing unused indexes helps maintain storage efficiency and avoids unnecessary overhead during similarity searches.","sidebar":"docsSidebar"},"client-libraries/rust/request-ai/drop-predicate-index":{"id":"client-libraries/rust/request-ai/drop-predicate-index","title":"Drop Predicate Index","description":"Removes a predicate index used by the AI service to optimize filtered embedding queries. This operation is useful when certain metadata-based filters are no longer needed for semantic search, or when the index must be rebuilt due to changes in input fields.","sidebar":"docsSidebar"},"client-libraries/rust/request-ai/drop-store":{"id":"client-libraries/rust/request-ai/drop-store","title":"Drop Store","description":"Deletes an entire vector store from the AI service, including all embeddings and their associated metadata. This is a destructive operation and should be used with caution. Dropping a store is useful when the store is no longer needed, when cleaning up unused resources, or when resetting a dataset for fresh ingestion.","sidebar":"docsSidebar"},"client-libraries/rust/request-ai/get-by-predicate":{"id":"client-libraries/rust/request-ai/get-by-predicate","title":"Get By Predicate","description":"Retrieves records from a vector store that satisfy a given predicate filter. Supports filtered semantic queries where embeddings must meet metadata-based conditions in addition to similarity searches.","sidebar":"docsSidebar"},"client-libraries/rust/request-ai/get-key":{"id":"client-libraries/rust/request-ai/get-key","title":"Get Key","description":"Fetches a record from a vector store by its unique key. This provides a deterministic lookup of a specific embedding and its metadata, useful for retrieving known vectors or verifying insertion results.","sidebar":"docsSidebar"},"client-libraries/rust/request-ai/get-simn":{"id":"client-libraries/rust/request-ai/get-simn","title":"Get Sim N","description":"Performs a similarity search in a vector store, retrieving the top-N most similar embeddings to a given query vector. This operation is the core of the AI client\u2019s retrieval capability, enabling semantic search, recommendation, and nearest-neighbor lookups.","sidebar":"docsSidebar"},"client-libraries/rust/request-ai/info-server":{"id":"client-libraries/rust/request-ai/info-server","title":"Info Server","description":"Retrieves detailed information about the Ahnlich AI service server, including metadata such as version, build information, and runtime configuration. This call is useful for diagnostics, compatibility checks, and ensuring the AI service is running as expected.","sidebar":"docsSidebar"},"client-libraries/rust/request-ai/list-connected-clients":{"id":"client-libraries/rust/request-ai/list-connected-clients","title":"List Connected Clients","description":"Retrieves a list of clients currently connected to the AI service. This provides visibility into active sessions, useful for monitoring, debugging, and coordinating multi-client AI workloads.","sidebar":"docsSidebar"},"client-libraries/rust/request-ai/list-stores":{"id":"client-libraries/rust/request-ai/list-stores","title":"List Store","description":"Retrieves a list of all vector stores currently managed by the AI service. Each store represents a logical container for embeddings and their associated metadata. This operation is useful for exploring available stores before performing read or write operations.","sidebar":"docsSidebar"},"client-libraries/rust/request-ai/new":{"id":"client-libraries/rust/request-ai/new","title":"New","description":"Initializes a new AI client instance that can communicate with the Ahnlich AI service. This method sets up the gRPC connection and prepares the client for performing operations such as embedding insertions, similarity searches, and pipelines.","sidebar":"docsSidebar"},"client-libraries/rust/request-ai/ping":{"id":"client-libraries/rust/request-ai/ping","title":"Ping","description":"Checks connectivity with the Ahnlich AI service and verifies the server is reachable over the current gRPC channel. Use this lightweight call for health checks or to validate that the AI client can communicate with the service before issuing embedding or inference requests.","sidebar":"docsSidebar"},"client-libraries/rust/request-ai/purge-stores":{"id":"client-libraries/rust/request-ai/purge-stores","title":"Purge Stores","description":"Deletes all vector stores managed by the AI client, including all embeddings and associated metadata. This is a destructive operation that resets the AI service state, typically used during testing, cleanup, or when starting fresh with new datasets.","sidebar":"docsSidebar"},"client-libraries/rust/request-ai/request-ai":{"id":"client-libraries/rust/request-ai/request-ai","title":"Request AI","description":"The Request AI client provides a set of operations for interacting with the Ahnlich AI service, which complements the DB client by handling the generation, transformation, and interpretation of embeddings. Instead of managing storage or retrieval directly, the AI client focuses on creating meaningful vector representations from raw data and enabling higher-level reasoning tasks.","sidebar":"docsSidebar"},"client-libraries/rust/request-ai/set":{"id":"client-libraries/rust/request-ai/set","title":"Set","description":"Inserts or updates embeddings and their associated metadata into a vector store managed by the AI service. This operation is central to populating a store with new data or refreshing existing entries to keep the dataset consistent and relevant for similarity search.","sidebar":"docsSidebar"},"client-libraries/rust/request-db/create-non-linear-algx":{"id":"client-libraries/rust/request-db/create-non-linear-algx","title":"Create Non-Linear Algorithm Index","description":"Creates a non-linear algorithm index on a store to optimize vector similarity searches beyond basic linear methods. Non-linear indexes improve query performance and scalability when working with large vector datasets.","sidebar":"docsSidebar"},"client-libraries/rust/request-db/create-predicate-index":{"id":"client-libraries/rust/request-db/create-predicate-index","title":"Create Predicate Index","description":"Creates an index on a predicate field in a store. Predicate indexes allow efficient filtering and retrieval of vectors based on metadata conditions, improving query performance for repeated predicate lookups.","sidebar":"docsSidebar"},"client-libraries/rust/request-db/create-store":{"id":"client-libraries/rust/request-db/create-store","title":"Create Store","description":"Creates a new vector store within the Ahnlich DB service. A store is the primary container for vectors and metadata, and all vector operations must be scoped to a specific store. This request is essential for initializing logical partitions of data before inserting or querying vectors.","sidebar":"docsSidebar"},"client-libraries/rust/request-db/delete-by-predicate":{"id":"client-libraries/rust/request-db/delete-by-predicate","title":"Delete By Predicate","description":"Removes one or more records from a store based on a predicate condition. Instead of targeting records by key, this operation evaluates a logical filter against stored metadata or values and deletes all matching entries. It provides a flexible way to bulk-remove records without knowing their exact keys.","sidebar":"docsSidebar"},"client-libraries/rust/request-db/delete-key":{"id":"client-libraries/rust/request-db/delete-key","title":"Delete Key","description":"Removes a single key and its associated vector and metadata from a store. This operation permanently deletes the entry, ensuring it is no longer retrievable in similarity searches or direct lookups. Use this to manage lifecycle of individual records without affecting the rest of the store.","sidebar":"docsSidebar"},"client-libraries/rust/request-db/drop-non-linear-algx":{"id":"client-libraries/rust/request-db/drop-non-linear-algx","title":"Drop Non-Linear Algorithm Index","description":"Removes an existing non-linear algorithm index from a store. This operation is useful when an index is no longer needed, when switching to a different indexing strategy, or during cleanup of store resources. Dropping the index reverts the store back to standard linear search behavior unless another index exists.","sidebar":"docsSidebar"},"client-libraries/rust/request-db/drop-predicate-index":{"id":"client-libraries/rust/request-db/drop-predicate-index","title":"Drop Predicate Index","description":"Removes an existing predicate index from a store. This operation cleans up indexes that are no longer needed for query acceleration.","sidebar":"docsSidebar"},"client-libraries/rust/request-db/drop-store":{"id":"client-libraries/rust/request-db/drop-store","title":"Drop Store","description":"Deletes an entire store from the database, including all vectors, keys, and associated metadata. This is a destructive operation and cannot be reversed\u2014once a store is dropped, all of its contents are permanently removed.","sidebar":"docsSidebar"},"client-libraries/rust/request-db/get-by-predicate":{"id":"client-libraries/rust/request-db/get-by-predicate","title":"Get By Predicate","description":"Retrieve one or more stored vectors and their associated metadata from a store by applying a predicate filter. Unlike Get Key, which retrieves a single item by its unique key, Get by Predicate allows querying based on conditions defined on metadata fields (for example, \\"all items where category = book\\"). This is useful for flexible filtering, targeted queries, or conditional retrieval.","sidebar":"docsSidebar"},"client-libraries/rust/request-db/get-key":{"id":"client-libraries/rust/request-db/get-key","title":"Get Key","description":"Retrieve a single stored vector (and its associated metadata) by key from a specified store. Use this request to fetch the exact item you previously inserted with Set or to validate the contents of a given key.","sidebar":"docsSidebar"},"client-libraries/rust/request-db/get-simn":{"id":"client-libraries/rust/request-db/get-simn","title":"Get Sim N","description":"The GetSimN request retrieves the top-N most similar vectors to a given query vector from a specified store. This is the core similarity search operation in Ahnlich DB, allowing you to find nearest neighbors by vector distance.","sidebar":"docsSidebar"},"client-libraries/rust/request-db/info-server":{"id":"client-libraries/rust/request-db/info-server","title":"Info Server","description":"Retrieves server information for the connected Ahnlich service over the current gRPC channel. Use this to confirm service identity and inspect basic runtime details before issuing data operations or when troubleshooting.","sidebar":"docsSidebar"},"client-libraries/rust/request-db/list-connected-clients":{"id":"client-libraries/rust/request-db/list-connected-clients","title":"List Connected Clients","description":"Retrieves a list of all clients currently connected to the database service. This is useful for monitoring active sessions, debugging connectivity issues, and gaining visibility into which applications are using the DB.","sidebar":"docsSidebar"},"client-libraries/rust/request-db/list-stores":{"id":"client-libraries/rust/request-db/list-stores","title":"List Stores","description":"Returns the list of vector stores registered in the connected Ahnlich DB service. This request is typically used to discover available stores before performing store-scoped operations such as creating, dropping, or inserting vectors.","sidebar":"docsSidebar"},"client-libraries/rust/request-db/ping":{"id":"client-libraries/rust/request-db/ping","title":"Ping","description":"Checks connectivity with the Ahnlich service and verifies that the server can accept requests over the current gRPC channel. Useful for health checks, readiness probes, or establishing a baseline before issuing data operations.","sidebar":"docsSidebar"},"client-libraries/rust/request-db/request-db":{"id":"client-libraries/rust/request-db/request-db","title":"request-db","description":"The Request DB provides a set of operations for managing vector stores and interacting with their contents. These APIs wrap low-level gRPC calls in a convenient Rust interface, handling request construction, tracing propagation, and response parsing. Together, they enable you to create, query, update, and delete records within the database in a structured and reliable way.","sidebar":"docsSidebar"},"client-libraries/rust/request-db/set":{"id":"client-libraries/rust/request-db/set","title":"Set","description":"The Set request inserts or updates a vector in a given store. Each vector is stored alongside optional metadata and a unique key. If a key already exists in the store, calling Set with the same key will overwrite the existing vector and metadata.","sidebar":"docsSidebar"},"client-libraries/rust/rust":{"id":"client-libraries/rust/rust","title":"Rust","description":"Build Ahnlich Applications with the Rust SDK \u2013 Vector Storage, Search, and AI tooling.","sidebar":"docsSidebar"},"client-libraries/rust/rust-specific-resources":{"id":"client-libraries/rust/rust-specific-resources","title":"Rust Specific Resources","description":"Before installing ahnlichclientrs, you need Rust and Cargo set up on your system.","sidebar":"docsSidebar"},"client-libraries/rust/testing":{"id":"client-libraries/rust/testing","title":"Testing","description":"The crate includes example tests in the repository that demonstrate practical usage of both the DB and AI clients. These tests provide guidance on real-world scenarios and validate expected behavior.","sidebar":"docsSidebar"},"client-libraries/rust/types-and-utilities":{"id":"client-libraries/rust/types-and-utilities","title":"Type & Utilities","description":"The crate re-exports commonly used parameter and result types through the prelude module, simplifying imports across your Rust project. This allows you to access frequently used structures, enums, and request builders without importing them individually from multiple modules.","sidebar":"docsSidebar"},"community":{"id":"community","title":"\ud83c\udf0d Community","description":"","sidebar":"docsSidebar"},"components/ahnlich-ai/advanced":{"id":"components/ahnlich-ai/advanced","title":"Advanced","description":"Unlike Ahnlich DB, which is concerned with similarity algorithms and indexing, Ahnlich AI focuses on embedding generation. The service introduces model-aware stores, where you define the embedding models used for both data insertion (indexing) and querying. This abstraction lets developers work directly with raw inputs (text or images) while the AI proxy handles embedding generation.","sidebar":"docsSidebar"},"components/ahnlich-ai/ahnlich-ai":{"id":"components/ahnlich-ai/ahnlich-ai","title":"\ud83e\udd16 Ahnlich AI","description":"Overview","sidebar":"docsSidebar"},"components/ahnlich-ai/deep-dive":{"id":"components/ahnlich-ai/deep-dive","title":"Deeper Dive","description":"1. Commands via the AI Proxy","sidebar":"docsSidebar"},"components/ahnlich-ai/overview":{"id":"components/ahnlich-ai/overview","title":"Overview","description":""},"components/ahnlich-ai/reference":{"id":"components/ahnlich-ai/reference","title":"Reference","description":"Ahnlich AI (ahnlich-ai) is the proxy layer that connects raw input (text, images, etc.) to Ahnlich DB, automatically generating embeddings and managing them in vector stores.","sidebar":"docsSidebar"},"components/ahnlich-ai/setup-config":{"id":"components/ahnlich-ai/setup-config","title":"Setup & Configuration","description":"This section explains how to install, configure, and run Ahnlich AI. Ahnlich AI acts as a proxy layer to Ahnlich DB, handling raw input, embedding generation, and semantic querying. It can run standalone or alongside Ahnlich DB, and is available as prebuilt binaries and Docker images.","sidebar":"docsSidebar"},"components/ahnlich-ai/use-cases":{"id":"components/ahnlich-ai/use-cases","title":"Use Cases","description":"1. Semantic Search with Raw Input","sidebar":"docsSidebar"},"components/ahnlich-cli/ahnlich-cli":{"id":"components/ahnlich-cli/ahnlich-cli","title":"\ud83d\udcdf Ahnlich CLI","description":"The Ahnlich Command-Line Interface (CLI) is a lightweight tool that allows developers, researchers, and operators to interact directly with the Ahnlich AI and Ahnlich DB servers.","sidebar":"docsSidebar"},"components/ahnlich-cli/ai-commands":{"id":"components/ahnlich-cli/ai-commands","title":"AI Commands","description":"The Ahnlich CLI supports AI-powered vector stores that enable semantic search, similarity matching, and predicate-based queries. This allows developers to insert embeddings (from text, images, or other binary inputs), query them with different similarity algorithms, and manage AI stores just like databases.","sidebar":"docsSidebar"},"components/ahnlich-cli/db-commands":{"id":"components/ahnlich-cli/db-commands","title":"DB Commands","description":"The Ahnlich CLI also supports structured database stores that allow you to insert, retrieve, and manage key-value data with predicates and indexes. Unlike AI Stores, which use embeddings and models, DB Stores are optimized for direct key-based and predicate-based queries.","sidebar":"docsSidebar"},"components/ahnlich-cli/installation":{"id":"components/ahnlich-cli/installation","title":"Installation","description":"You can use the Ahnlich CLI either by downloading prebuilt binaries or by building from source.","sidebar":"docsSidebar"},"components/ahnlich-db/advanced":{"id":"components/ahnlich-db/advanced","title":"Advanced","description":"Ahnlich DB supports multiple similarity algorithms that determine how vectors are compared. Choosing the right one depends on your use case (recommendations, semantic search, image retrieval, etc.).","sidebar":"docsSidebar"},"components/ahnlich-db/ahnlich-db":{"id":"components/ahnlich-db/ahnlich-db","title":"\ud83d\uddc4\ufe0f Ahnlich DB","description":"Overview","sidebar":"docsSidebar"},"components/ahnlich-db/installation":{"id":"components/ahnlich-db/installation","title":"Installation","description":"Setup & Configuration (Ahnlich DB)","sidebar":"docsSidebar"},"components/ahnlich-db/reference":{"id":"components/ahnlich-db/reference","title":"Reference","description":"This section documents all supported DB request commands in Ahnlich DB. Commands can be executed via the text-based query interface or programmatically through client APIs.","sidebar":"docsSidebar"},"components/ahnlich-db/use-cases":{"id":"components/ahnlich-db/use-cases","title":"Use Cases","description":"1. Semantic Search","sidebar":"docsSidebar"},"components/components":{"id":"components/components","title":"\ud83e\udde9 Components","description":"Ahnlich is a suite of tools that can be used to build a variety of applications. This page lists the components that are available in Ahnlich.","sidebar":"docsSidebar"},"components/distributed-tracing/ahnlich-ai":{"id":"components/distributed-tracing/ahnlich-ai","title":"Tracing in Ahnlich AI","description":"Why would you want to trace?","sidebar":"docsSidebar"},"components/distributed-tracing/ahnlich-db":{"id":"components/distributed-tracing/ahnlich-db","title":"Tracing in Ahnlich DB","description":"Why would you want to trace?","sidebar":"docsSidebar"},"components/distributed-tracing/distributed-tracing":{"id":"components/distributed-tracing/distributed-tracing","title":"Distributed Tracing","description":"Distributed tracing allows you to track requests across Ahnlich DB and Ahnlich AI. Since many queries flow from the AI service into the DB, tracing provides end-to-end visibility of what happens inside the pipeline. This is critical for diagnosing bottlenecks, monitoring performance, and ensuring reliability in production.","sidebar":"docsSidebar"},"components/distributed-tracing/using-jaeger":{"id":"components/distributed-tracing/using-jaeger","title":"Using Jaeger","description":"Jaeger is a popular open-source distributed tracing system. We use the all-in-one Docker image to collect and visualize traces for both DB and AI operations.","sidebar":"docsSidebar"},"components/persistence-in-ahnlich/persistence-for-ahnlich-ai":{"id":"components/persistence-in-ahnlich/persistence-for-ahnlich-ai","title":"Persistence for Ahnlich AI","description":"Why need persistence?","sidebar":"docsSidebar"},"components/persistence-in-ahnlich/persistence-for-ahnlich-db":{"id":"components/persistence-in-ahnlich/persistence-for-ahnlich-db","title":"Persistence for Ahnlich DB","description":"Why need persistence?","sidebar":"docsSidebar"},"components/persistence-in-ahnlich/persistence-in-ahnlich":{"id":"components/persistence-in-ahnlich/persistence-in-ahnlich","title":"\u267e\ufe0f Persistence In Ahnlich","description":"Overview","sidebar":"docsSidebar"},"getting-started/comparison-with-other-tools":{"id":"getting-started/comparison-with-other-tools","title":"\u2696\ufe0f Comparison with other tools","description":"","sidebar":"docsSidebar"},"getting-started/getting-started":{"id":"getting-started/getting-started","title":"\ud83d\ude80 Getting started","description":"<DocCardList items={","sidebar":"docsSidebar"},"getting-started/installation":{"id":"getting-started/installation","title":"\ud83d\udce6 Installation","description":"\ud83d\udc33 Install via Docker (Recommended for isolated environments & CI)","sidebar":"docsSidebar"},"getting-started/next-steps":{"id":"getting-started/next-steps","title":"\u27a1\ufe0f Next Steps","description":"<DocCardList items={","sidebar":"docsSidebar"},"getting-started/usage":{"id":"getting-started/usage","title":"\ud83d\udd28 Usage","description":"","sidebar":"docsSidebar"},"guides/index":{"id":"guides/index","title":"Guides","description":"Discover in-depth tutorials and real-world examples built using Ahnlich. Each guide walks through full end-to-end scenarios that demonstrate how to build semantic search applications with Rust and Python."},"guides/python":{"id":"guides/python","title":"\ud83d\udcda Python Book Search","description":"Source: examples/python/book\u2011search"},"guides/rust":{"id":"guides/rust","title":"\u26a1 Rust Image Search","description":"Source: examples/rust/image\u2011search"},"index":{"id":"index","title":"Overview","description":""},"overview":{"id":"overview","title":"\ud83d\udccb Overview","description":"\u2728 Ahnlich is a modern, in-memory vector database paired with a smart AI proxy layer, designed to simplify the use of semantic embeddings for developers and AI builders with zero external dependencies.","sidebar":"docsSidebar"}}}}')}}]);