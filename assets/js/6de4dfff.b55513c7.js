"use strict";(self.webpackChunkahnlich_web=self.webpackChunkahnlich_web||[]).push([[3764],{28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var r=t(96540);const i={},s=r.createContext(i);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:n},e.children)}},69971:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"client-libraries/go/request-ai/list-stores","title":"List Stores","description":"Description","source":"@site/docs/client-libraries/go/request-ai/list-stores.md","sourceDirName":"client-libraries/go/request-ai","slug":"/client-libraries/go/request-ai/list-stores","permalink":"/docs/client-libraries/go/request-ai/list-stores","draft":false,"unlisted":false,"editUrl":"https://github.com/deven96/ahnlich/tree/main/web/ahnlich-web/docs/client-libraries/go/request-ai/list-stores.md","tags":[],"version":"current","frontMatter":{"title":"List Stores"},"sidebar":"docsSidebar","previous":{"title":"Info Server","permalink":"/docs/client-libraries/go/request-ai/info-server"},"next":{"title":"Create Store","permalink":"/docs/client-libraries/go/request-ai/create-store"}}');var i=t(74848),s=t(28453);const o={title:"List Stores"},l="List Stores",c={},a=[{value:"Description",id:"description",level:2},{value:"Source Code Example",id:"source-code-example",level:2},{value:"Behavior",id:"behavior",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"list-stores",children:"List Stores"})}),"\n",(0,i.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"ListStores"})," provides a ",(0,i.jsx)(n.strong,{children:"catalog of AI-managed stores"})," currently registered in the Ahnlich AI proxy. Each store represents a logical grouping where raw inputs (text, images, etc.) are converted into embeddings using the configured models and then indexed for retrieval."]}),"\n",(0,i.jsx)(n.p,{children:"This request allows developers to:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Discover all existing stores available for AI-based operations."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Verify that newly created stores are correctly registered and visible."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Audit what data partitions are accessible through the AI proxy at a given time."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["It is especially useful in ",(0,i.jsx)(n.strong,{children:"multi-tenant scenarios"}),", where different applications or teams may own separate stores, and clients need visibility into what stores exist before performing further operations."]}),"\n",(0,i.jsx)(n.h2,{id:"source-code-example",children:"Source Code Example"}),"\n",(0,i.jsxs)(t,{children:[(0,i.jsx)("summary",{children:"Click to expand source code"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'package main\n\n\nimport (\n    "context"\n    "fmt"\n    "log"\n    "time"\n\n\n    "google.golang.org/grpc"\n    "google.golang.org/grpc/credentials/insecure"\n\n\n    aiquery "github.com/deven96/ahnlich/sdk/ahnlich-client-go/grpc/ai/query"\n    aisvc "github.com/deven96/ahnlich/sdk/ahnlich-client-go/grpc/services/ai_service"\n)\n\n\nconst AIAddr = "127.0.0.1:1370"\n\n\n// ExampleAIClient holds the gRPC connection and AI client.\ntype ExampleAIClient struct {\n    conn   *grpc.ClientConn\n    client aisvc.AIServiceClient\n    ctx    context.Context\n}\n\n\n// NewAIClient connects to the AI server and returns a client.\nfunc NewAIClient(ctx context.Context) (*ExampleAIClient, error) {\n    conn, err := grpc.DialContext(ctx, AIAddr, grpc.WithTransportCredentials(insecure.NewCredentials()), grpc.WithBlock())\n    if err != nil {\n        return nil, fmt.Errorf("failed to dial AI server %q: %w", AIAddr, err)\n    }\n    client := aisvc.NewAIServiceClient(conn)\n    return &ExampleAIClient{conn: conn, client: client, ctx: ctx}, nil\n}\n\n\n// Close closes the gRPC connection.\nfunc (c *ExampleAIClient) Close() error {\n    return c.conn.Close()\n}\n\n\n// ---- ListStores Example ----\n// List all stores available on the AI server.\nfunc (c *ExampleAIClient) exampleListStoresAI() error {\n    resp, err := c.client.ListStores(c.ctx, &aiquery.ListStores{})\n    if err != nil {\n        return err\n    }\n    fmt.Println(" AI Stores:", resp.Stores)\n    return nil\n}\n\n\n// ---- MAIN ----\nfunc main() {\n    ctx, cancel := context.WithTimeout(context.Background(), 10*time.Second)\n    defer cancel()\n\n\n    client, err := NewAIClient(ctx)\n    if err != nil {\n        log.Fatalf("Failed to create AI client: %v", err)\n    }\n    defer client.Close()\n\n\n    if err := client.exampleListStoresAI(); err != nil {\n        log.Fatalf("ListStores failed: %v", err)\n    }\n}\n\n'})})]}),"\n",(0,i.jsx)(n.h2,{id:"behavior",children:"Behavior"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"The response represents the set of AI-managed stores the proxy reports at the time of the request."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["An empty ",(0,i.jsx)(n.strong,{children:"resp.Stores"})," means the AI proxy currently reports no configured stores."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"The server\u2019s list is authoritative for that moment in time; contents may change between calls."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"A non-nil error indicates the request failed and no valid store list was returned."}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);