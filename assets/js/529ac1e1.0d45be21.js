"use strict";(self.webpackChunkahnlich_web=self.webpackChunkahnlich_web||[]).push([[1866],{28453:(e,i,n)=>{n.d(i,{R:()=>l,x:()=>c});var r=n(96540);const s={},t=r.createContext(s);function l(e){const i=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(t.Provider,{value:i},e.children)}},87218:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"client-libraries/rust/request-ai/request-ai","title":"Request AI","description":"The Request AI client provides a set of operations for interacting with the Ahnlich AI service, which complements the DB client by handling the generation, transformation, and interpretation of embeddings. Instead of managing storage or retrieval directly, the AI client focuses on creating meaningful vector representations from raw data and enabling higher-level reasoning tasks.","source":"@site/docs/client-libraries/rust/request-ai/request-ai.md","sourceDirName":"client-libraries/rust/request-ai","slug":"/client-libraries/rust/request-ai/","permalink":"/docs/client-libraries/rust/request-ai/","draft":false,"unlisted":false,"editUrl":"https://github.com/deven96/ahnlich/tree/main/web/ahnlich-web/docs/client-libraries/rust/request-ai/request-ai.md","tags":[],"version":"current","frontMatter":{"title":"Request AI"},"sidebar":"docsSidebar","previous":{"title":"Delete By Predicate","permalink":"/docs/client-libraries/rust/request-db/delete-by-predicate"},"next":{"title":"Ping","permalink":"/docs/client-libraries/rust/request-ai/ping"}}');var s=n(74848),t=n(28453);const l={title:"Request AI"},c="Request AI",a={},d=[{value:"Capabilities",id:"capabilities",level:2},{value:"Behavior",id:"behavior",level:2}];function o(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"request-ai",children:"Request AI"})}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.strong,{children:"Request AI client"})," provides a set of operations for interacting with the ",(0,s.jsx)(i.strong,{children:"Ahnlich AI service"}),", which complements the DB client by handling the generation, transformation, and interpretation of embeddings. Instead of managing storage or retrieval directly, the AI client focuses on ",(0,s.jsx)(i.strong,{children:"creating meaningful vector representations"})," from raw data and enabling higher-level reasoning tasks."]}),"\n",(0,s.jsx)(i.p,{children:"Just like the DB client, each operation follows a consistent execution pattern:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Request preparation"})," \u2014 Input parameters are wrapped in a ",(0,s.jsx)(i.code,{children:"tonic::Request"})," object."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Tracing propagation"})," \u2014 If a ",(0,s.jsx)(i.code,{children:"tracing_id"})," is provided, it is attached for observability."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Execution"})," \u2014 The client forwards the request to the AI service."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Response handling"})," \u2014 The response is unwrapped and returned in a typed result."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"capabilities",children:"Capabilities"}),"\n",(0,s.jsx)(i.p,{children:"With Request AI, you can:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Generate embeddings"})," \u2014 Convert text, documents, or structured input into dense vector representations."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Interpret embeddings"})," \u2014 Extract semantic meaning or similarity insights from stored vectors."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Support hybrid workflows"})," \u2014 Combine AI-generated embeddings with DB operations for efficient similarity search."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Metadata augmentation"})," \u2014 Enrich vectors with contextual or domain-specific annotations before persistence."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Batch processing"})," \u2014 Process multiple inputs in a single request for efficiency."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"behavior",children:"Behavior"}),"\n",(0,s.jsx)(i.p,{children:"All Request AI operations are designed to:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Ensure consistency"})," \u2014 The same input will always yield the same embedding for reproducibility."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Support idempotency"})," \u2014 Repeated requests with identical input and parameters return identical results."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Handle concurrency"})," \u2014 Multiple requests can be executed in parallel, ensuring scalability under load."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Propagate observability"})," \u2014 Optional tracing IDs allow for debugging and performance monitoring in distributed systems."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Below are the operations for generating embeddings, interpreting inputs, and integrating AI-driven vectors into the Ahnlich ecosystem."}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"/docs/client-libraries/rust/request-ai/ping",children:"Ping"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"/docs/client-libraries/rust/request-ai/info-server",children:"Info Server"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"/docs/client-libraries/rust/request-ai/list-stores",children:"List Stores"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"/docs/client-libraries/rust/request-ai/create-store",children:"Create Store"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"/docs/client-libraries/rust/request-ai/set",children:"Set"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"/docs/client-libraries/rust/request-ai/get-simn",children:"Get Sim N"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"/docs/client-libraries/rust/request-ai/get-key",children:"Get Key"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"/docs/client-libraries/rust/request-ai/get-by-predicate",children:"Get by Predicate"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"/docs/client-libraries/rust/request-ai/create-predicate-index",children:"Create Predicate Index"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"/docs/client-libraries/rust/request-ai/drop-predicate-index",children:"Drop Predicate Index"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"/docs/client-libraries/rust/request-ai/delete-key",children:"Delete Key"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"/docs/client-libraries/rust/request-ai/drop-store",children:"Drop Store"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"/docs/client-libraries/rust/request-ai/list-connected-clients",children:"List Connected Clients"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"/docs/client-libraries/rust/request-ai/create-non-linear-algx",children:"Create Non-Linear Algorithm Index"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"/docs/client-libraries/rust/request-ai/drop-non-linear-algx",children:"Drop Non-Linear Algorithm Index"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"/docs/client-libraries/rust/request-ai/new",children:"New"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"/docs/client-libraries/rust/request-ai/purge-stores",children:"Purge Stores"})}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}}}]);