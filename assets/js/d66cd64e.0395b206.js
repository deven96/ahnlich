"use strict";(self.webpackChunkahnlich_web=self.webpackChunkahnlich_web||[]).push([[907],{28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>c});var r=n(96540);const s={},i=r.createContext(s);function o(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:t},e.children)}},65053:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"client-libraries/python/request-db/get-key","title":"GetKey","description":"The GetKey request retrieves entries from a store based on an exact vector key match.","source":"@site/docs/client-libraries/python/request-db/get-key.md","sourceDirName":"client-libraries/python/request-db","slug":"/client-libraries/python/request-db/get-key","permalink":"/docs/client-libraries/python/request-db/get-key","draft":false,"unlisted":false,"editUrl":"https://github.com/deven96/ahnlich/tree/main/web/ahnlich-web/docs/client-libraries/python/request-db/get-key.md","tags":[],"version":"current","frontMatter":{"title":"GetKey"},"sidebar":"docsSidebar","previous":{"title":"GetSimN","permalink":"/docs/client-libraries/python/request-db/get-simn"},"next":{"title":"Get by Predicate","permalink":"/docs/client-libraries/python/request-db/get-by-predicate"}}');var s=n(74848),i=n(28453);const o={title:"GetKey"},c="GetKey",l={},a=[];function d(e){const t={code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components},{Details:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"getkey",children:"GetKey"})}),"\n",(0,s.jsx)(t.p,{children:"The GetKey request retrieves entries from a store based on an exact vector key match."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Input"}),":"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"store"}),": the store name."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"key"}),": the exact vector you want to retrieve."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Behavior"}),": Finds the stored entry that matches the vector key exactly."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Response"}),": Returns the entry (vector + metadata) if found."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n,{children:[(0,s.jsx)("summary",{children:"Click to expand source code"}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-py",children:'  import asyncio\n  from grpclib.client import Channel\n  from ahnlich_client_py.grpc import keyval\n  from ahnlich_client_py.grpc.services.db_service import DbServiceStub\n  from ahnlich_client_py.grpc.db import query as db_query\n  from ahnlich_client_py.grpc.db.server import Get\n\n  async def get_key():\n    async with Channel(host="127.0.0.1", port=1369) as channel:\n      client = DbServiceStub(channel)\n      \n      lookup_key = keyval.StoreKey(key=[5.0, 3.0, 4.0, 3.9, 4.9])  # Your lookup vector\n      \n      response = await client.get_key(\n        db_query.GetKey(\n            store="customer_profiles",\n            keys=[lookup_key]\n        )\n      )\n      # response.entries contains matching (key, value) pairs\n  if __name__ == "__main__":\n    asyncio.run(get_key())\n\n'})})]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);