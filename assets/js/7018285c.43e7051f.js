"use strict";(self.webpackChunkahnlich_web=self.webpackChunkahnlich_web||[]).push([[6743],{28453:(e,r,n)=>{n.d(r,{R:()=>s,x:()=>o});var t=n(96540);const i={},d=t.createContext(i);function s(e){const r=t.useContext(d);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(d.Provider,{value:r},e.children)}},60201:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"client-libraries/rust/request-db/drop-predicate-index","title":"Drop Predicate Index","description":"Removes an existing predicate index from a store. This operation cleans up indexes that are no longer needed for query acceleration.","source":"@site/docs/client-libraries/rust/request-db/drop-predicate-index.md","sourceDirName":"client-libraries/rust/request-db","slug":"/client-libraries/rust/request-db/drop-predicate-index","permalink":"/docs/client-libraries/rust/request-db/drop-predicate-index","draft":false,"unlisted":false,"editUrl":"https://github.com/deven96/ahnlich/tree/main/web/ahnlich-web/docs/client-libraries/rust/request-db/drop-predicate-index.md","tags":[],"version":"current","frontMatter":{"title":"Drop Predicate Index"},"sidebar":"docsSidebar","previous":{"title":"Create Predicate Index","permalink":"/docs/client-libraries/rust/request-db/create-predicate-index"},"next":{"title":"Delete Key","permalink":"/docs/client-libraries/rust/request-db/delete-key"}}');var i=n(74848),d=n(28453);const s={title:"Drop Predicate Index"},o="Drop Predicate Index",a={},l=[{value:"Source Code Example",id:"source-code-example",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Behavior",id:"behavior",level:2}];function c(e){const r={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,d.R)(),...e.components},{Details:n}=r;return n||function(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"drop-predicate-index",children:"Drop Predicate Index"})}),"\n",(0,i.jsx)(r.p,{children:"Removes an existing predicate index from a store. This operation cleans up indexes that are no longer needed for query acceleration."}),"\n",(0,i.jsx)(r.h2,{id:"source-code-example",children:"Source Code Example"}),"\n",(0,i.jsxs)(n,{children:[(0,i.jsx)("summary",{children:"Click to expand"}),(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-rust",children:'use ahnlich_client_rs::db::DbClient;\nuse ahnlich_types::db::query::DropPredIndex;\nuse tokio;\n\n\n#[tokio::main]\nasync fn main() -> Result<(), Box<dyn std::error::Error>> {\n    let addr = "http://127.0.0.1:1369";\n    let client = DbClient::new(addr.to_string()).await?;\n\n\n    // Drop the "role" predicate index from store "Main"\n    let drop_index_params = DropPredIndex {\n        store: "Main".to_string(),\n        predicates: vec!["role".to_string()],\n        error_if_not_exists: true, // fail if it doesn\'t exist\n    };\n\n\n    match client.drop_pred_index(drop_index_params, None).await {\n        Ok(result) => println!("Dropped predicate index: {:?}", result),\n        Err(e) => eprintln!("Error: {:?}", e),\n    }\n\n\n    Ok(())\n}\n'})})]}),"\n",(0,i.jsx)(r.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"params: DropPredIndex"})," \u2014 Identifies the store and the predicate index to remove."]}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"returns",children:"Returns"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"Del"})," \u2014 Confirmation of index removal."]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"AhnlichError"})," \u2014 If the store or index does not exist."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"behavior",children:"Behavior"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"Builds a gRPC request with the target index details."}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"Attaches optional trace metadata."}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:["Executes the ",(0,i.jsx)(r.code,{children:"drop_pred_index"})," RPC to delete the index."]}),"\n"]}),"\n"]})]})}function p(e={}){const{wrapper:r}={...(0,d.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);