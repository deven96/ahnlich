"use strict";(self.webpackChunkahnlich_web=self.webpackChunkahnlich_web||[]).push([[1305],{28453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>c});var t=r(96540);const o={},s=t.createContext(o);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(s.Provider,{value:n},e.children)}},87478:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"client-libraries/python/request-ai/drop-store","title":"Drop Store","description":"The Drop Store request removes an entire AI store and all its contents.","source":"@site/docs/client-libraries/python/request-ai/drop-store.md","sourceDirName":"client-libraries/python/request-ai","slug":"/client-libraries/python/request-ai/drop-store","permalink":"/docs/client-libraries/python/request-ai/drop-store","draft":false,"unlisted":false,"editUrl":"https://github.com/deven96/ahnlich/tree/main/web/ahnlich-web/docs/client-libraries/python/request-ai/drop-store.md","tags":[],"version":"current","frontMatter":{"title":"Drop Store"},"sidebar":"docsSidebar","previous":{"title":"Delete Key","permalink":"/docs/client-libraries/python/request-ai/delete-key"},"next":{"title":"Create Non-Linear algorithm Index","permalink":"/docs/client-libraries/python/request-ai/create-non-linear-algx"}}');var o=r(74848),s=r(28453);const i={title:"Drop Store"},c="Drop Store",l={},a=[];function d(e){const n={code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"drop-store",children:"Drop Store"})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.strong,{children:"Drop Store"})," request removes an entire AI store and all its contents.\nUse this when you no longer need the vector store or want to clean up your environment."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Inputs"}),":"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"store"})," \u2013 Name of the AI store to drop."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"error_if_not_exists"})," \u2013 If ",(0,o.jsx)(n.code,{children:"True"}),", the request will fail if the store does not exist."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Response"}),": Returns a response containing the number of stores deleted (",(0,o.jsx)(n.code,{children:"deleted_count"}),")."]}),"\n",(0,o.jsxs)(r,{children:[(0,o.jsx)("summary",{children:"Click to expand source code"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-py",children:'import asyncio\nfrom grpclib.client import Channel\nfrom ahnlich_client_py.grpc.services.ai_service import AiServiceStub\nfrom ahnlich_client_py.grpc.ai import query as ai_query\n\n\nasync def drop_store():\n  async with Channel(host="127.0.0.1", port=1370) as channel:\n      client = AiServiceStub(channel)\n      response = await client.drop_store(\n          ai_query.DropStore(\n              store="test store",\n              error_if_not_exists=True\n          )\n      )\n      print(response) # Del(deleted_count=1)\n\n\nif __name__ == "__main__":\n  asyncio.run(drop_store())\n'})})]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);