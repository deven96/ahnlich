"use strict";(self.webpackChunkahnlich_web=self.webpackChunkahnlich_web||[]).push([[6490],{28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>c});var t=r(96540);const i={},s=t.createContext(i);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(s.Provider,{value:n},e.children)}},54414:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"client-libraries/go/request-db/list-stores","title":"List Stores","description":"Description","source":"@site/docs/client-libraries/go/request-db/list-stores.md","sourceDirName":"client-libraries/go/request-db","slug":"/client-libraries/go/request-db/list-stores","permalink":"/docs/client-libraries/go/request-db/list-stores","draft":false,"unlisted":false,"editUrl":"https://github.com/deven96/ahnlich/tree/main/web/ahnlich-web/docs/client-libraries/go/request-db/list-stores.md","tags":[],"version":"current","frontMatter":{"title":"List Stores"},"sidebar":"docsSidebar","previous":{"title":"Info Server","permalink":"/docs/client-libraries/go/request-db/info-server"},"next":{"title":"Create Store","permalink":"/docs/client-libraries/go/request-db/create-store"}}');var i=r(74848),s=r(28453);const o={title:"List Stores"},c="List Stores",l={},a=[{value:"Description",id:"description",level:2},{value:"Behavior",id:"behavior",level:2},{value:"Source Code Example",id:"source-code-example",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"list-stores",children:"List Stores"})}),"\n",(0,i.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"ListStores"})," returns the set of vector stores currently available on the Ahnlich DB server. Use it to ",(0,i.jsx)(n.strong,{children:"discover"})," what stores exist and to ",(0,i.jsx)(n.strong,{children:"validate"})," that a target store is present before you attempt writes or similarity queries."]}),"\n",(0,i.jsx)(n.h2,{id:"behavior",children:"Behavior"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"The call returns a collection of store identifiers from the server at the time of the request."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Treat the result as an ",(0,i.jsx)(n.strong,{children:"enumeration"}),": don\u2019t assume ordering or uniqueness semantics beyond what the server provides."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["An ",(0,i.jsx)(n.strong,{children:"empty list"})," simply means no stores are present yet on that server."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"source-code-example",children:"Source Code Example"}),"\n",(0,i.jsxs)(r,{children:[(0,i.jsx)("summary",{children:"Click to expand source code"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'package main\n\n\nimport (\n    "context"\n    "fmt"\n    "log"\n    "time"\n\n\n    "google.golang.org/grpc"\n    "google.golang.org/grpc/credentials/insecure"\n\n\n    dbsvc   "github.com/deven96/ahnlich/sdk/ahnlich-client-go/grpc/services/db_service"\n    dbquery "github.com/deven96/ahnlich/sdk/ahnlich-client-go/grpc/db/query"\n)\n\n\nconst ServerAddr = "127.0.0.1:1369"\n\n\ntype ExampleDBClient struct {\n    conn   *grpc.ClientConn\n    client dbsvc.DBServiceClient\n    ctx    context.Context\n}\n\n\nfunc NewDBClient(ctx context.Context) (*ExampleDBClient, error) {\n    conn, err := grpc.DialContext(ctx, ServerAddr, grpc.WithTransportCredentials(insecure.NewCredentials()), grpc.WithBlock())\n    if err != nil {\n        return nil, fmt.Errorf("failed to dial DB server %q: %w", ServerAddr, err)\n    }\n    client := dbsvc.NewDBServiceClient(conn)\n    return &ExampleDBClient{conn: conn, client: client, ctx: ctx}, nil\n}\n\n\nfunc (c *ExampleDBClient) Close() error { return c.conn.Close() }\n\n\n// InfoServer example\nfunc (c *ExampleDBClient) exampleInfoServer() error {\n    resp, err := c.client.InfoServer(c.ctx, &dbquery.InfoServer{})\n    if err != nil {\n        return err\n    }\n    fmt.Println("InfoServer:", resp)\n    return nil\n}\n\n\nfunc main() {\n    ctx, cancel := context.WithTimeout(context.Background(), 10*time.Second)\n    defer cancel()\n\n\n    client, err := NewDBClient(ctx)\n    if err != nil {\n        log.Fatalf("Failed to create DB client: %v", err)\n    }\n    defer client.Close()\n\n\n    if err := client.exampleInfoServer(); err != nil {\n        log.Fatalf("InfoServer failed: %v", err)\n    }\n}\n\n'})})]}),"\n",(0,i.jsxs)(n.p,{children:["This method sends a ",(0,i.jsx)(n.code,{children:"ListStores"})," request and prints the returned set of stores via ",(0,i.jsx)(n.code,{children:"resp.Stores"}),". If the RPC fails, the returned error indicates the call did not succeed."]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);