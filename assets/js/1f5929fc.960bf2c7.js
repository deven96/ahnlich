"use strict";(self.webpackChunkahnlich_web=self.webpackChunkahnlich_web||[]).push([[9450],{28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>l});var a=t(96540);const r={},i=a.createContext(r);function s(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),a.createElement(i.Provider,{value:n},e.children)}},63932:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>o});const a=JSON.parse('{"id":"getting-started/usage","title":"\ud83d\udd28 Usage","description":"This section covers how to install, run, and interact with Ahnlich. You\u2019ll learn how to start the database and AI proxy, create stores, insert/query data, and manage lifecycle operations.","source":"@site/docs/getting-started/usage.md","sourceDirName":"getting-started","slug":"/getting-started/usage","permalink":"/docs/getting-started/usage","draft":false,"unlisted":false,"editUrl":"https://github.com/deven96/ahnlich/tree/main/web/ahnlich-web/docs/getting-started/usage.md","tags":[],"version":"current","sidebarPosition":20,"frontMatter":{"title":"\ud83d\udd28 Usage","sidebar_position":20},"sidebar":"docsSidebar","previous":{"title":"\ud83d\udce6 Installation","permalink":"/docs/getting-started/installation"},"next":{"title":"\u2696\ufe0f Comparison with other tools","permalink":"/docs/getting-started/comparison-with-other-tools"}}');var r=t(74848),i=t(28453);const s={title:"\ud83d\udd28 Usage",sidebar_position:20},l="Usage",d={},o=[{value:"Quickstart: Run Ahnlich",id:"quickstart-run-ahnlich",level:2},{value:"1. Start the Database",id:"1-start-the-database",level:4},{value:"2. Start the AI Proxy",id:"2-start-the-ai-proxy",level:4},{value:"3. Create a Store",id:"3-create-a-store",level:4},{value:"4. Insert Data",id:"4-insert-data",level:4},{value:"5. Query Data",id:"5-query-data",level:4},{value:"Querying the Database",id:"querying-the-database",level:2},{value:"Example DB Commands",id:"example-db-commands",level:3},{value:"Create a Store",id:"create-a-store",level:4},{value:"Insert Data",id:"insert-data",level:4},{value:"Retrieve Data",id:"retrieve-data",level:4},{value:"Combine Multiple Commands",id:"combine-multiple-commands",level:4},{value:"Supported DB Commands",id:"supported-db-commands",level:3},{value:"Querying the AI Proxy",id:"querying-the-ai-proxy",level:2},{value:"Example AI Commands",id:"example-ai-commands",level:3},{value:"Create an AI Store",id:"create-an-ai-store",level:4},{value:"Insert AI Data",id:"insert-ai-data",level:4},{value:"Query AI Data",id:"query-ai-data",level:4},{value:"How to Uninstall Ahnlich",id:"how-to-uninstall-ahnlich",level:2},{value:"If Installed via Binaries",id:"if-installed-via-binaries",level:4},{value:"If Installed via Docker",id:"if-installed-via-docker",level:4}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"usage",children:"Usage"})}),"\n",(0,r.jsxs)(n.p,{children:["This section covers how to ",(0,r.jsx)(n.strong,{children:"install, run, and interact"})," with Ahnlich. You\u2019ll learn how to start the database and AI proxy, create stores, insert/query data, and manage lifecycle operations."]}),"\n",(0,r.jsx)(n.h2,{id:"quickstart-run-ahnlich",children:"Quickstart: Run Ahnlich"}),"\n",(0,r.jsx)(n.p,{children:"The fastest way to get started is by using the CLI with the binaries."}),"\n",(0,r.jsx)(n.h4,{id:"1-start-the-database",children:"1. Start the Database"}),"\n",(0,r.jsxs)(n.p,{children:["Download and extract the latest binary from ",(0,r.jsx)(n.a,{href:"https://github.com/deven96/ahnlich/releases",children:"GitHub Releases"}),".\nRun the database:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"./ahnlich-db run --port 1369\n"})}),"\n",(0,r.jsx)(n.h4,{id:"2-start-the-ai-proxy",children:"2. Start the AI Proxy"}),"\n",(0,r.jsx)(n.p,{children:"In another terminal, run the AI proxy:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"./ahnlich-ai run --db-host 127.0.0.1 --port 1370 \\\n  --supported-models all-minilm-l6-v2,resnet-50\n"})}),"\n",(0,r.jsx)(n.p,{children:"This connects the AI proxy to the database and makes embedding models available."}),"\n",(0,r.jsx)(n.h4,{id:"3-create-a-store",children:"3. Create a Store"}),"\n",(0,r.jsx)(n.p,{children:"Create a store with an index and query model:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"./ahnlich-cli create_store my_store \\\n  --index_model all-minilm-l6-v2 \\\n  --query_model all-minilm-l6-v2\n"})}),"\n",(0,r.jsx)(n.h4,{id:"4-insert-data",children:"4. Insert Data"}),"\n",(0,r.jsx)(n.p,{children:"Insert vectors with metadata:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'./ahnlich-cli insert my_store \\\n  --vector [0.1,0.2,0.3] \\\n  --metadata \'{"page":"about"}\'\n'})}),"\n",(0,r.jsx)(n.h4,{id:"5-query-data",children:"5. Query Data"}),"\n",(0,r.jsx)(n.p,{children:"Search for the two closest vectors:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"./ahnlich-cli get_sim_n my_store \\\n  --input [0.2,0.1,0.3] \\\n  --n 2 \\\n  --algorithm cosinesimilarity \\\n  --where 'page != hidden'\n"})}),"\n",(0,r.jsx)(n.p,{children:"You now have a running Ahnlich instance with similarity search working end-to-end."}),"\n",(0,r.jsx)(n.h2,{id:"querying-the-database",children:"Querying the Database"}),"\n",(0,r.jsxs)(n.p,{children:["The CLI also provides a ",(0,r.jsx)(n.strong,{children:"declarative command style"})," for database operations.\nCommands generally follow this format:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"<COMMAND> <ARGS> IN <STORE>\n"})}),"\n",(0,r.jsx)(n.h3,{id:"example-db-commands",children:"Example DB Commands"}),"\n",(0,r.jsx)(n.h4,{id:"create-a-store",children:"Create a Store"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"CREATESTORE test_store DIMENSION 2 PREDICATES (author, country)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"insert-data",children:"Insert Data"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"SET (([1.0, 2.1], {name: Haks, category: dev}), \n     ([3.1, 4.8], {name: Deven, category: dev})) IN test_store\n"})}),"\n",(0,r.jsx)(n.h4,{id:"retrieve-data",children:"Retrieve Data"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"GETKEY ([1.0, 2.0], [3.0, 4.0]) IN test_store\n"})}),"\n",(0,r.jsx)(n.h4,{id:"combine-multiple-commands",children:"Combine Multiple Commands"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"GETKEY ([1.0, 2.0], [3.0, 4.0]) IN test_store; \nCREATEPREDINDEX (name, category) IN test_store\n"})}),"\n",(0,r.jsx)(n.h3,{id:"supported-db-commands",children:"Supported DB Commands"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"PING"})," \u2013 check if the server is responsive"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"LISTCLIENTS"})," \u2013 list active connections"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"LISTSTORES"})," \u2013 list all stores"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"INFOSERVER"})," \u2013 get server metadata/version"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"DROPSTORE store_name IF EXISTS"})," \u2013 delete a store"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"CREATEPREDINDEX (key_1, key_2) IN store_name"})," \u2013 create predicate index"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"GETSIMN n WITH [vector] USING cosinesimilarity IN store_name WHERE (predicate)"})," \u2013 query nearest neighbors"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"SET (...) IN store_name"})," \u2013 insert one or more vectors"]}),"\n",(0,r.jsx)(n.p,{children:"\u2026and more as the CLI evolves"}),"\n",(0,r.jsx)(n.h2,{id:"querying-the-ai-proxy",children:"Querying the AI Proxy"}),"\n",(0,r.jsx)(n.p,{children:"When running the AI proxy alongside the DB, you can issue AI-aware commands that automatically embed text/images before storage."}),"\n",(0,r.jsx)(n.h3,{id:"example-ai-commands",children:"Example AI Commands"}),"\n",(0,r.jsx)(n.h4,{id:"create-an-ai-store",children:"Create an AI Store"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"CREATESTORE my_store \n  QUERYMODEL resnet-50 \n  INDEXMODEL resnet-50 \n  PREDICATES (author, country) \n  NONLINEARALGORITHMINDEX (kdtree)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"insert-ai-data",children:"Insert AI Data"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"SET (([This is the life of Haks], {name: Haks, category: dev}), \n     ([This is the life of Deven], {name: Deven, category: dev})) IN store\n"})}),"\n",(0,r.jsx)(n.h4,{id:"query-ai-data",children:"Query AI Data"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"GETSIMN 4 WITH [random text] USING cosinesimilarity IN store_name WHERE (author = dickens)\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Here, the ",(0,r.jsx)(n.code,{children:"input string is automatically embedded"})," by the AI proxy before being compared against the stored vectors."]}),"\n",(0,r.jsx)(n.h2,{id:"how-to-uninstall-ahnlich",children:"How to Uninstall Ahnlich"}),"\n",(0,r.jsx)(n.p,{children:"Depending on your setup, uninstall is straightforward."}),"\n",(0,r.jsx)(n.h4,{id:"if-installed-via-binaries",children:"If Installed via Binaries"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"rm -rf ./ahnlich-db ./ahnlich-ai ./ahnlich-cli\n"})}),"\n",(0,r.jsx)(n.h4,{id:"if-installed-via-docker",children:"If Installed via Docker"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"docker compose down -v\ndocker rmi ghcr.io/deven96/ahnlich-ai:latest \\\n           ghcr.io/deven96/ahnlich-db:latest\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);