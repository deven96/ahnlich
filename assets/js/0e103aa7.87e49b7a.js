"use strict";(self.webpackChunkahnlich_web=self.webpackChunkahnlich_web||[]).push([[685],{28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>d});var r=i(96540);const t={},s=r.createContext(t);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(s.Provider,{value:n},e.children)}},56645:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"client-libraries/python/request-ai/drop-predicate-index","title":"Drop Predicate Index","description":"Predicate index allow for efficient querying based on metadata fields. You can drop either a single predicate index or multiple predicate indices depending on your needs.","source":"@site/docs/client-libraries/python/request-ai/drop-predicate-index.md","sourceDirName":"client-libraries/python/request-ai","slug":"/client-libraries/python/request-ai/drop-predicate-index","permalink":"/docs/client-libraries/python/request-ai/drop-predicate-index","draft":false,"unlisted":false,"editUrl":"https://github.com/deven96/ahnlich/tree/main/web/ahnlich-web/docs/client-libraries/python/request-ai/drop-predicate-index.md","tags":[],"version":"current","frontMatter":{"title":"Drop Predicate Index"},"sidebar":"docsSidebar","previous":{"title":"Create Predicate Index","permalink":"/docs/client-libraries/python/request-ai/create-predicate-index"},"next":{"title":"Delete Key","permalink":"/docs/client-libraries/python/request-ai/delete-key"}}');var t=i(74848),s=i(28453);const o={title:"Drop Predicate Index"},d="Drop Predicate Index",c={},a=[];function l(e){const n={code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components},{Details:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"drop-predicate-index",children:"Drop Predicate Index"})}),"\n",(0,t.jsxs)(n.p,{children:["Predicate index allow for efficient querying based on metadata fields. You can drop either a ",(0,t.jsx)(n.strong,{children:"single predicate index"})," or ",(0,t.jsx)(n.strong,{children:"multiple predicate indices"})," depending on your needs."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Single Predicate Index"}),": Specify a single predicate in the ",(0,t.jsx)(n.code,{children:"predicates"})," list, e.g., ",(0,t.jsx)(n.code,{children:'["job"]'}),". This will remove the index associated with that one metadata field."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Multiple Predicate Indices"}),": Include multiple predicates in the list, e.g., ",(0,t.jsx)(n.code,{children:'["job", "rank"]'}),". All listed indices will be dropped in a single request."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note"}),": The ",(0,t.jsx)(n.code,{children:"error_if_not_exists"})," flag ensures that an error is thrown if the index does not exist. The ",(0,t.jsx)(n.code,{children:"response.deleted_count"})," property shows how many indices were actually removed."]}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"Click to expand source code"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-py",children:'import asyncio\nfrom grpclib.client import Channel\nfrom ahnlich_client_py.grpc.services.ai_service import AiServiceStub\nfrom ahnlich_client_py.grpc.ai import query as ai_query\n\n\nasync def drop_predicate_index():\n  async with Channel(host="127.0.0.1", port=1370) as channel:\n      client = AiServiceStub(channel)\n      response = await client.drop_pred_index(\n          ai_query.DropPredIndex(\n              store="test store",\n              predicates=["job"],\n              error_if_not_exists=True\n          )\n      )\n      print(response) # Del(deleted_count=1)\n\n\nif __name__ == "__main__":\n  asyncio.run(drop_predicate_index())\n'})})]}),"\n",(0,t.jsx)(n.p,{children:"This approach allows you to maintain flexibility, dropping either one or many predicate indices in a single operation, while keeping your store optimized for AI queries."})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}}}]);