"use strict";(self.webpackChunkahnlich_web=self.webpackChunkahnlich_web||[]).push([[5218],{11557:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"client-libraries/rust/request-db/delete-by-predicate","title":"Delete By Predicate","description":"Removes one or more records from a store based on a predicate condition. Instead of targeting records by key, this operation evaluates a logical filter against stored metadata or values and deletes all matching entries. It provides a flexible way to bulk-remove records without knowing their exact keys.","source":"@site/docs/client-libraries/rust/request-db/delete-by-predicate.md","sourceDirName":"client-libraries/rust/request-db","slug":"/client-libraries/rust/request-db/delete-by-predicate","permalink":"/docs/client-libraries/rust/request-db/delete-by-predicate","draft":false,"unlisted":false,"editUrl":"https://github.com/deven96/ahnlich/tree/main/web/ahnlich-web/docs/client-libraries/rust/request-db/delete-by-predicate.md","tags":[],"version":"current","frontMatter":{"title":"Delete By Predicate"},"sidebar":"docsSidebar","previous":{"title":"Drop Non-Linear Algorithm Index","permalink":"/docs/client-libraries/rust/request-db/drop-non-linear-algx"},"next":{"title":"Request AI","permalink":"/docs/client-libraries/rust/request-ai/"}}');var i=t(74848),a=t(28453);const s={title:"Delete By Predicate"},d="Delete By Predicate",l={},o=[{value:"Source Code Example",id:"source-code-example",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Behavior",id:"behavior",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"delete-by-predicate",children:"Delete By Predicate"})}),"\n",(0,i.jsx)(n.p,{children:"Removes one or more records from a store based on a predicate condition. Instead of targeting records by key, this operation evaluates a logical filter against stored metadata or values and deletes all matching entries. It provides a flexible way to bulk-remove records without knowing their exact keys."}),"\n",(0,i.jsx)(n.h2,{id:"source-code-example",children:"Source Code Example"}),"\n",(0,i.jsxs)(t,{children:[(0,i.jsx)("summary",{children:"Click to expand"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",children:'use ahnlich_types::db::query::DelPred;\nuse ahnlich_types::db::server::Del;\nuse ahnlich_types::predicates::{Predicate, PredicateCondition, predicate::Kind as PredicateKind, predicate_condition::Kind as PredicateConditionKind};\nuse ahnlich_client_rs::db::DbClient;\nuse ahnlich_types::metadata::{MetadataValue, metadata_value::Value};\nuse std::collections::HashMap;\n\n\n#[tokio::main]\nasync fn main() -> Result<(), Box<dyn std::error::Error>> {\n    // gRPC server address\n    let addr = "http://127.0.0.1:1369".to_string();\n    let db_client = DbClient::new(addr).await?;\n\n\n    // Define the predicate condition to delete\n    let condition = PredicateCondition {\n        kind: Some(PredicateConditionKind::Value(Predicate {\n            kind: Some(PredicateKind::Equals(ahnlich_types::predicates::Equals {\n                key: "medal".into(),\n                value: Some(MetadataValue {\n                    value: Some(Value::RawString("gold".into())),\n                }),\n            })),\n        })),\n    };\n\n\n    // Parameters for deleting predicate\n    let params = DelPred {\n        store: "Main".to_string(), // your store name\n        condition: Some(condition),\n    };\n\n\n    // Call delete predicate\n    match db_client.del_pred(params, None).await {\n        Ok(Del { deleted_count }) => {\n            println!("Successfully deleted {} predicate(s).", deleted_count);\n        }\n        Err(e) => {\n            eprintln!("Error deleting predicate: {:?}", e);\n        }\n    }\n\n\n    Ok(())\n}\n'})})]}),"\n",(0,i.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"params: DelPred"})," \u2014 Defines the predicate filter used to match records for deletion."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"tracing_id: Option<String>"})," \u2014 Optional trace identifier for monitoring and observability."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"returns",children:"Returns"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Del"})," \u2014 Confirmation of the deletion request, including details of what was removed."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"AhnlichError"})," \u2014 If the predicate is invalid or no matching records are found."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"behavior",children:"Behavior"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Wraps the predicate parameters in a request object."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Propagates tracing context if available."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Executes the delete operation against the DB service."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Returns confirmation once the matching records are deleted."}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>d});var r=t(96540);const i={},a=r.createContext(i);function s(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);