"use strict";(self.webpackChunkahnlich_web=self.webpackChunkahnlich_web||[]).push([[1811],{5627:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"client-libraries/rust/request-ai/get-simn","title":"Get Sim N","description":"Performs a similarity search in a vector store, retrieving the top-N most similar embeddings to a given query vector. This operation is the core of the AI client\u2019s retrieval capability, enabling semantic search, recommendation, and nearest-neighbor lookups.","source":"@site/docs/client-libraries/rust/request-ai/get-simn.md","sourceDirName":"client-libraries/rust/request-ai","slug":"/client-libraries/rust/request-ai/get-simn","permalink":"/docs/client-libraries/rust/request-ai/get-simn","draft":false,"unlisted":false,"editUrl":"https://github.com/deven96/ahnlich/tree/main/web/ahnlich-web/docs/client-libraries/rust/request-ai/get-simn.md","tags":[],"version":"current","frontMatter":{"title":"Get Sim N"},"sidebar":"docsSidebar","previous":{"title":"Set","permalink":"/docs/client-libraries/rust/request-ai/set"},"next":{"title":"Get Key","permalink":"/docs/client-libraries/rust/request-ai/get-key"}}');var t=r(74848),s=r(28453);const a={title:"Get Sim N"},o="Get Sim N",l={},c=[{value:"Source Code Example",id:"source-code-example",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Behavior (explains the code, brief)",id:"behavior-explains-the-code-brief",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"get-sim-n",children:"Get Sim N"})}),"\n",(0,t.jsxs)(n.p,{children:["Performs a ",(0,t.jsx)(n.strong,{children:"similarity search"})," in a vector store, retrieving the top-N most similar embeddings to a given query vector. This operation is the core of the AI client\u2019s retrieval capability, enabling semantic search, recommendation, and nearest-neighbor lookups."]}),"\n",(0,t.jsx)(n.h2,{id:"source-code-example",children:"Source Code Example"}),"\n",(0,t.jsxs)(r,{children:[(0,t.jsx)("summary",{children:"Click to expand"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:'use ahnlich_client_rs::ai::AiClient;\nuse ahnlich_client_rs::error::AhnlichError;\nuse ahnlich_types::ai::preprocess::PreprocessAction;\nuse ahnlich_types::ai::query::GetSimN;\nuse ahnlich_types::keyval::{StoreInput};\nuse ahnlich_types::keyval::store_input::Value; // Correct path\n\n\n#[tokio::main]\nasync fn main() -> Result<(), AhnlichError> {\n    // Connect to AI server\n    let addr = "127.0.0.1:1370";\n    let client = AiClient::new(addr.to_string()).await?;\n\n\n    // Prepare the search input\n    let search_input = StoreInput {\n        value: Some(Value::RawString("example query".into())),\n    };\n\n\n    // Construct GetSimN parameters\n    let params = GetSimN {\n        store: "Main0".to_string(),\n        search_input: Some(search_input),\n        closest_n: 3, // number of similar entries to retrieve\n        algorithm: 0, // default algorithm (0 usually corresponds to Cosine)\n        execution_provider: None,\n        preprocess_action: PreprocessAction::NoPreprocessing as i32,\n        condition: None,\n    };\n\n\n    // Run the GetSimN command\n    let res = client.get_sim_n(params, None).await?;\n    println!("GetSimN result: {:?}", res);\n\n\n    Ok(())\n}\n'})})]}),"\n",(0,t.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"params: GetSimN"})," \u2014 The query input, including the target vector and configuration such as the number of neighbors (",(0,t.jsx)(n.code,{children:"N"}),") to return and optional filters."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"tracing_id: Option<String>"})," \u2014 Optional trace parent ID for distributed observability across services."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"returns",children:"Returns"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Ok(GetSimNResult)"})," \u2014 Contains the ranked list of the top-N closest embeddings along with their similarity scores and associated metadata."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Err(AhnlichError)"})," \u2014 Returned when the query fails, parameters are invalid, or the service encounters an error."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"behavior-explains-the-code-brief",children:"Behavior (explains the code, brief)"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Wraps the ",(0,t.jsx)(n.code,{children:"GetSimN"})," query in a ",(0,t.jsx)(n.code,{children:"tonic::Request"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Adds trace propagation metadata if provided."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Sends the request to the AI service\u2019s ",(0,t.jsx)(n.code,{children:"get_sim_n"})," RPC method."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Waits for the response and unwraps the result."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Returns a ",(0,t.jsx)(n.code,{children:"GetSimNResult"})," with the similarity matches."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>o});var i=r(96540);const t={},s=i.createContext(t);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);