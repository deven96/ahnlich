"use strict";(self.webpackChunkahnlich_web=self.webpackChunkahnlich_web||[]).push([[5436],{28453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>c});var t=r(96540);const o={},s=t.createContext(o);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(s.Provider,{value:n},e.children)}},97208:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"client-libraries/python/request-db/drop-store","title":"Drop Store","description":"The Drop Store request permanently deletes a store and all its contents.","source":"@site/docs/client-libraries/python/request-db/drop-store.md","sourceDirName":"client-libraries/python/request-db","slug":"/client-libraries/python/request-db/drop-store","permalink":"/docs/client-libraries/python/request-db/drop-store","draft":false,"unlisted":false,"editUrl":"https://github.com/deven96/ahnlich/tree/main/web/ahnlich-web/docs/client-libraries/python/request-db/drop-store.md","tags":[],"version":"current","frontMatter":{"title":"Drop Store"},"sidebar":"docsSidebar","previous":{"title":"Delete Key","permalink":"/docs/client-libraries/python/request-db/delete-key"},"next":{"title":"Create Non-Linear Algorithm Index","permalink":"/docs/client-libraries/python/request-db/create-non-linear-algx"}}');var o=r(74848),s=r(28453);const i={title:"Drop Store"},c="Drop Store",l={},a=[];function d(e){const n={br:"br",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"drop-store",children:"Drop Store"})}),"\n",(0,o.jsxs)(n.p,{children:["The Drop Store request permanently deletes a store and all its contents.",(0,o.jsx)(n.br,{}),"\n","Use this carefully, as the operation is destructive and cannot be undone."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Behavior:"})," Removes the store and its data from the DB engine."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Response:"})," Confirmation response indicating deletion."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(r,{children:[(0,o.jsx)("summary",{children:" Click to Expand Source Code"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-py",children:'import asyncio\nfrom grpclib.client import Channel\nfrom grpclib.exceptions import GRPCError\nfrom ahnlich_client_py.grpc.services.db_service import DbServiceStub\nfrom ahnlich_client_py.grpc.db import query as db_query\nfrom ahnlich_client_py.grpc.db.server import Del\n\n\nasync def drop_store():\n  async with Channel(host="127.0.0.1", port=1369) as channel:\n      client = DbServiceStub(channel)\n      \n      response = await client.drop_store(\n          db_query.DropStore(\n              store="test store",\n              error_if_not_exists=True\n          )\n      )\n      # response contains deleted_count\nif __name__ == "__main__":\n  asyncio.run(drop_store())\n'})})]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);