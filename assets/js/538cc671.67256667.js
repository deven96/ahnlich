"use strict";(self.webpackChunkahnlich_web=self.webpackChunkahnlich_web||[]).push([[8407],{5913:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"client-libraries/go/go","title":"Go","description":"Official Go client for Ahnlich similarity\u2011search engine, providing idiomatic access to both DB (exact vector search) and AI (semantic, embedding\u2011based search) stores. Requires a running Ahnlich backend (ahnlich-db at port\u202f1369 and/or ahnlich-ai at port\u202f1370).","source":"@site/docs/client-libraries/go/go.md","sourceDirName":"client-libraries/go","slug":"/client-libraries/go/","permalink":"/docs/client-libraries/go/","draft":false,"unlisted":false,"editUrl":"https://github.com/deven96/ahnlich/tree/main/web/ahnlich-web/docs/client-libraries/go/go.md","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"title":"Go","sidebar_position":10},"sidebar":"docsSidebar","previous":{"title":"\ud83e\udde9 Components","permalink":"/docs/components/"},"next":{"title":"Installation and Usage","permalink":"/docs/client-libraries/go/installation-and-usage"}}');var r=i(4848),a=i(8453);const s={title:"Go",sidebar_position:10},o="\u2699\ufe0f Ahnlich Go SDK",l={},c=[{value:"\u2699\ufe0f Installation",id:"\ufe0f-installation",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"\ufe0f-ahnlich-go-sdk",children:"\u2699\ufe0f Ahnlich Go SDK"})}),"\n",(0,r.jsxs)(n.p,{children:["Official Go client for Ahnlich similarity\u2011search engine, providing idiomatic access to both ",(0,r.jsx)(n.strong,{children:"DB"})," (exact vector search) and ",(0,r.jsx)(n.strong,{children:"AI"})," (semantic, embedding\u2011based search) stores. Requires a running Ahnlich backend (",(0,r.jsx)(n.code,{children:"ahnlich-db"})," at port\u202f1369 and/or ",(0,r.jsx)(n.code,{children:"ahnlich-ai"})," at port\u202f1370)."]}),"\n",(0,r.jsxs)(n.p,{children:["Visit the source and reference: ",(0,r.jsx)(n.a,{href:"https://github.com/deven96/ahnlich/tree/main/sdk/ahnlich-client-go",children:"GitHub/ahnlich-client-go"})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"\ufe0f-installation",children:"\u2699\ufe0f Installation"}),"\n",(0,r.jsx)(n.p,{children:"Ensure you have Go \u2265\u202f1.20 and a running Ahnlich backend:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"go get github.com/deven96/ahnlich/sdk/ahnlich-client-go@latest\n"})}),"\n",(0,r.jsx)(n.p,{children:"Import modules in your code:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'go\nimport (\n    "context"\n    ahn "github.com/deven96/ahnlich/sdk/ahnlich-client-go"\n)\n'})}),"\n",(0,r.jsx)(n.p,{children:"\ud83e\udde0 Connecting to DB / AI Store\nYou need to establish separate clients:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'// DB client\ndbClient, err := ahn.NewDbClient("127.0.0.1", 1369)\nif err != nil { log.Fatalf(...) }\ndefer dbClient.Close()\n\n// AI proxy client\naiClient, err := ahn.NewAiClient("127.0.0.1", 1370)\nif err != nil { log.Fatalf(...) }\ndefer aiClient.Close()\n'})}),"\n",(0,r.jsx)(n.p,{children:"This uses gRPC to connect to the Ahnlich backend. Always check .Close() on exit to clean up resources."}),"\n",(0,r.jsxs)(n.p,{children:["\ud83e\uddf1 Creating a DB Store\n",(0,r.jsx)(n.strong,{children:"What's a DB Store?"}),"\nA DB Store is a fixed-dimension embedding container for exact nearest\u2011neighbor search using Cosine, Euclidean (L2), or DotProduct metrics. You choose the vector dimension upfront, and can optionally configure metadata predicate indexes to accelerate filtering."]}),"\n",(0,r.jsx)(n.p,{children:"To create:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go"})}),"\n",(0,r.jsx)(n.p,{children:"This will register the store with your chosen embedding size and default similarity algorithm."}),"\n",(0,r.jsxs)(n.p,{children:["\ud83e\udde0 Creating an AI Store\n",(0,r.jsx)(n.strong,{children:"What's an AI Store?"}),"\nAn AI Store simplifies semantic search by accepting raw input (text or images), converting it to embeddings during ingestion and querying. It requires two models:"]}),"\n",(0,r.jsx)(n.p,{children:"\u2013 IndexModel: used when ingesting raw data.\n\u2013 QueryModel: used when computing embeddings for search queries."}),"\n",(0,r.jsx)(n.p,{children:"These models can be identical (e.g. AIModel_ALL_MINI_LM_L6_V2) but must produce the same embedding dimension, such as 768. This flexibility allows selecting different pipelines for indexing vs querying without breaking compatibility."}),"\n",(0,r.jsx)(n.p,{children:"All original inputs and metadata are preserved for retrieval alongside results."}),"\n",(0,r.jsx)(n.p,{children:"To create:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go"})}),"\n",(0,r.jsx)(n.p,{children:"\ud83d\udcbe Storing Entries\nIn a DB Store:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go"})}),"\n",(0,r.jsx)(n.p,{children:"In an AI Store (raw ingestion):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go"})}),"\n",(0,r.jsx)(n.p,{children:"If storing images, replace RawText with RawImage (of type []byte)."}),"\n",(0,r.jsx)(n.p,{children:"\ud83d\udd0d Searching for Closest Matches\nBoth DB and AI stores expose GetSimN() for similarity search. Only linear search algorithms (Cosine, Euclidean (L2), DotProduct) are supported. Approximate indexing (e.g. HNSW, locality\u2011sensitive hashing) is on the roadmap but not yet available\ngithub.com\n."}),"\n",(0,r.jsx)(n.p,{children:"DB Store search:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go"})}),"\n",(0,r.jsx)(n.p,{children:"AI Store search by query text:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go"})}),"\n",(0,r.jsx)(n.p,{children:"\ud83e\udde9 Using Metadata Filtering\nYou can narrow search results using predicates on metadata\u2014for both DB and AI stores:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go"})}),"\n",(0,r.jsx)(n.p,{children:"Filter is applied after similarity ranking, so you still retrieve top\u2011N relevant items that meet the predicate."}),"\n",(0,r.jsx)(n.p,{children:"\ud83e\uddf9 Dropping a Store\nRemove a namespace when you're done:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'if err := dbClient.DropStore(ctx, "my_util_store"); err != nil {\nlog.Fatalf("drop DB store: %v", err)\n}\n\nif err := aiClient.DropStore(ctx, "my_semantic_store"); err != nil {\nlog.Fatalf("drop AI store: %v", err)\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"\ud83e\uddf7 Quick Comparison\nOperation\tDB Store\tAI Store\nConnect\tNewDbClient(...)\tNewAiClient(...)\nCreate Store\tCreateStore(\u2026, Dimension)\tCreateStore(\u2026, Index/Query models)\nIngestion\tSet(Store, Key, Vector, Metadata)\tSet(Store, Key, RawText/RawImage, Metadata)\nSearch\tGetSimN(Input, Algorithm)\tGetSimN(QueryText, Algorithm)\nMetadata Filtering\tSupported via predicate\tSupported via predicate\nStore Deletion\tDropStore(...)\tDropStore(...)"}),"\n",(0,r.jsx)(n.p,{children:"\ud83d\udea6 Tips & Best Practices\nConsistent dimensions: All vectors and models must use the same dimension (e.g. 128, 768)."}),"\n",(0,r.jsx)(n.p,{children:"Index predicates: You can build predicate indexes using the CreatePredicateIndex() method for better filtering performance."}),"\n",(0,r.jsx)(n.p,{children:"Raw data retrieval: Results include Metadata and (for AI stores) the original RawText or RawImage so you can surface or log full context."}),"\n",(0,r.jsx)(n.p,{children:"AI store only: auto-embeddings via your configured models\u2014no need to compute embeddings manually."}),"\n",(0,r.jsx)(n.p,{children:"DB store only: good when you already have vectors, or use your own embedding pipeline."})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>o});var t=i(6540);const r={},a=t.createContext(r);function s(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);