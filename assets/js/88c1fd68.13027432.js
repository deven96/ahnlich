"use strict";(self.webpackChunkahnlich_web=self.webpackChunkahnlich_web||[]).push([[3791],{28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>c});var r=t(96540);const i={},o=r.createContext(i);function s(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(o.Provider,{value:n},e.children)}},77813:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"client-libraries/go/request-db/create-store","title":"Create Store","description":"Description","source":"@site/docs/client-libraries/go/request-db/create-store.md","sourceDirName":"client-libraries/go/request-db","slug":"/client-libraries/go/request-db/create-store","permalink":"/docs/client-libraries/go/request-db/create-store","draft":false,"unlisted":false,"editUrl":"https://github.com/deven96/ahnlich/tree/main/web/ahnlich-web/docs/client-libraries/go/request-db/create-store.md","tags":[],"version":"current","frontMatter":{"title":"Create Store"},"sidebar":"docsSidebar","previous":{"title":"List Stores","permalink":"/docs/client-libraries/go/request-db/list-stores"},"next":{"title":"Set","permalink":"/docs/client-libraries/go/request-db/set"}}');var i=t(74848),o=t(28453);const s={title:"Create Store"},c="Create Store",l={},a=[{value:"Description",id:"description",level:2},{value:"Behavior",id:"behavior",level:2},{value:"Source Code Example",id:"source-code-example",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"create-store",children:"Create Store"})}),"\n",(0,i.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"CreateStore"})," creates a new vector store on the Ahnlich DB server. A store is the fundamental unit of organization for embeddings and their associated metadata. Each store is defined by its ",(0,i.jsx)(n.strong,{children:"name"})," and its ",(0,i.jsx)(n.strong,{children:"dimension"}),", which specifies the length of vectors that can be inserted."]}),"\n",(0,i.jsx)(n.h2,{id:"behavior",children:"Behavior"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["A store must have a ",(0,i.jsx)(n.strong,{children:"unique name"})," within the server instance. If you try to create a store with an existing name, the server will reject it."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.strong,{children:"dimension parameter"})," is mandatory and must match the size of vectors you plan to insert."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Once created, a store can be queried, listed, and populated with embeddings."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"source-code-example",children:"Source Code Example"}),"\n",(0,i.jsxs)(t,{children:[(0,i.jsx)("summary",{children:"Click to expand source code"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'package main\n\n\nimport (\n    "context"\n    "fmt"\n    "log"\n    "time"\n\n\n    "google.golang.org/grpc"\n    "google.golang.org/grpc/credentials/insecure"\n\n\n    dbsvc   "github.com/deven96/ahnlich/sdk/ahnlich-client-go/grpc/services/db_service"\n    dbquery "github.com/deven96/ahnlich/sdk/ahnlich-client-go/grpc/db/query"\n)\n\n\nconst ServerAddr = "127.0.0.1:1369"\n\n\ntype ExampleDBClient struct {\n    conn   *grpc.ClientConn\n    client dbsvc.DBServiceClient\n    ctx    context.Context\n}\n\n\nfunc NewDBClient(ctx context.Context) (*ExampleDBClient, error) {\n    conn, err := grpc.DialContext(ctx, ServerAddr, grpc.WithTransportCredentials(insecure.NewCredentials()), grpc.WithBlock())\n    if err != nil {\n        return nil, fmt.Errorf("failed to dial DB server %q: %w", ServerAddr, err)\n    }\n    client := dbsvc.NewDBServiceClient(conn)\n    return &ExampleDBClient{conn: conn, client: client, ctx: ctx}, nil\n}\n\n\nfunc (c *ExampleDBClient) Close() error { return c.conn.Close() }\n\n\n// CreateStore example\nfunc (c *ExampleDBClient) exampleCreateStore(store string, dimension int32) error {\n    _, err := c.client.CreateStore(c.ctx, &dbquery.CreateStore{\n        Store:     store,\n        Dimension: uint32(dimension),\n    })\n    if err != nil {\n        return err\n    }\n    fmt.Printf("Created store: %s (dimension: %d)\\n", store, dimension)\n    return nil\n}\n\n\nfunc main() {\n    ctx, cancel := context.WithTimeout(context.Background(), 10*time.Second)\n    defer cancel()\n\n\n    client, err := NewDBClient(ctx)\n    if err != nil {\n        log.Fatalf("Failed to create DB client: %v", err)\n    }\n    defer client.Close()\n\n\n    storeName := "my_stores"\n    if err := client.exampleCreateStore(storeName, 4); err != nil {\n        log.Fatalf("CreateStore failed: %v", err)\n    }\n}\n'})})]}),"\n",(0,i.jsxs)(n.p,{children:["This method requests the creation of a store named ",(0,i.jsx)(n.code,{children:'"my_store"'})," with a vector dimensionality of 4. The response is ignored in this example, but the absence of an error indicates success."]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);