"use strict";(self.webpackChunkahnlich_web=self.webpackChunkahnlich_web||[]).push([[1291],{28453:(e,i,r)=>{r.d(i,{R:()=>l,x:()=>d});var s=r(96540);const n={},t=s.createContext(n);function l(e){const i=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),s.createElement(t.Provider,{value:i},e.children)}},36861:(e,i,r)=>{r.r(i),r.d(i,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"client-libraries/go/request-db/request-db","title":"Request DB","description":"The Ahnlich DB is an in-memory vector key\u2013value store designed for storing embeddings or vectors alongside their metadata (key\u2013value maps).","source":"@site/docs/client-libraries/go/request-db/request-db.md","sourceDirName":"client-libraries/go/request-db","slug":"/client-libraries/go/request-db/","permalink":"/docs/client-libraries/go/request-db/","draft":false,"unlisted":false,"editUrl":"https://github.com/deven96/ahnlich/tree/main/web/ahnlich-web/docs/client-libraries/go/request-db/request-db.md","tags":[],"version":"current","frontMatter":{"title":"Request DB","sidebar_posiiton":2},"sidebar":"docsSidebar","previous":{"title":"Go Specific Resources","permalink":"/docs/client-libraries/go/go-specific-resources"},"next":{"title":"Ping","permalink":"/docs/client-libraries/go/request-db/ping"}}');var n=r(74848),t=r(28453);const l={title:"Request DB",sidebar_posiiton:2},d="Requests \u2013 DB",c={},o=[];function a(e){const i={a:"a",code:"code",em:"em",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.header,{children:(0,n.jsx)(i.h1,{id:"requests--db",children:"Requests \u2013 DB"})}),"\n",(0,n.jsxs)(i.p,{children:["The ",(0,n.jsx)(i.strong,{children:"Ahnlich DB"})," is an in-memory vector key\u2013value store designed for storing embeddings or vectors alongside their metadata (key\u2013value maps)."]}),"\n",(0,n.jsx)(i.p,{children:"It provides AI/ML engineers with the ability to:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsx)(i.p,{children:"Store and retrieve embeddings."}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsx)(i.p,{children:"Search for similar vectors using linear similarity algorithms (Cosine, Euclidean)."}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsx)(i.p,{children:"Perform searches with non-linear similarity algorithms (such as KD-Tree)."}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsx)(i.p,{children:"Filter results based on metadata values."}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(i.p,{children:"This makes it possible to build intelligent search and recommendation systems that combine vector similarity with metadata-based filtering."}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.em,{children:"Example"})}),"\n",(0,n.jsxs)(i.p,{children:["A query to retrieve the 2 most similar vectors to ",(0,n.jsx)(i.code,{children:"[0.2, 0.1]"})," from the store ",(0,n.jsx)(i.code,{children:"my_store"}),", using cosine similarity, while excluding any items where the metadata field ",(0,n.jsx)(i.code,{children:"page"})," is equal to ",(0,n.jsx)(i.code,{children:'"hidden"'}),":"]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-go",children:"GETSIMN 2 WITH [0.2, 0.1] USING cosinesimilarity IN my_store WHERE (page != hidden)\n"})}),"\n",(0,n.jsx)(i.p,{children:"Below is a breakdown of common DB request examples:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"/docs/client-libraries/go/request-db/ping",children:"Ping"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"/docs/client-libraries/go/request-db/info-server",children:"Info Server"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"/docs/client-libraries/go/request-db/list-stores",children:"List Stores"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"/docs/client-libraries/go/request-db/create-store",children:"Create Store"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"/docs/client-libraries/go/request-db/set",children:"Set"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"/docs/client-libraries/go/request-db/get-simn",children:"GetSimN"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"/docs/client-libraries/go/request-db/get-key",children:"Get Key"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"/docs/client-libraries/go/request-db/get-by-predicate",children:"Get By Predicate"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"/docs/client-libraries/go/request-db/create-predicate-index",children:"Create Predicate Index"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"/docs/client-libraries/go/request-db/drop-predicate-index",children:"Drop Predicate Index"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"/docs/client-libraries/go/request-db/delete-key",children:"Delete Key"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"/docs/client-libraries/go/request-db/drop-store",children:"Drop Store"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"/docs/client-libraries/go/request-db/list-connected-clients",children:"List Connected Clients"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"/docs/client-libraries/go/request-db/create-non-linear-algx",children:"Create Non Linear Algorithm Index"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"/docs/client-libraries/go/request-db/drop-non-linear-algx",children:"Drop Non Linear Algorithm Index"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"/docs/client-libraries/go/request-db/delete-predicate",children:"Delete Predicate"})}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}}}]);