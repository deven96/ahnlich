"use strict";(self.webpackChunkahnlich_web=self.webpackChunkahnlich_web||[]).push([[6970],{28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>l});var t=r(96540);const i={},a=t.createContext(i);function o(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(a.Provider,{value:n},e.children)}},76351:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"client-libraries/python/request-db/create-non-linear-algx","title":"Create Non-Linear Algorithm Index","description":"Creating non-linear algorithm indexes allows you to optimize query execution based on spatial or high-dimensional data structures.","source":"@site/docs/client-libraries/python/request-db/create-non-linear-algx.md","sourceDirName":"client-libraries/python/request-db","slug":"/client-libraries/python/request-db/create-non-linear-algx","permalink":"/docs/client-libraries/python/request-db/create-non-linear-algx","draft":false,"unlisted":false,"editUrl":"https://github.com/deven96/ahnlich/tree/main/web/ahnlich-web/docs/client-libraries/python/request-db/create-non-linear-algx.md","tags":[],"version":"current","frontMatter":{"title":"Create Non-Linear Algorithm Index"},"sidebar":"docsSidebar","previous":{"title":"Drop Store","permalink":"/docs/client-libraries/python/request-db/drop-store"},"next":{"title":"Drop Non-Linear Algorithm Index","permalink":"/docs/client-libraries/python/request-db/drop-non-linear-algx"}}');var i=r(74848),a=r(28453);const o={title:"Create Non-Linear Algorithm Index"},l="Create Non-Linear Algorithm Index",s={},c=[{value:"Define a Client and Call the API",id:"define-a-client-and-call-the-api",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"create-non-linear-algorithm-index",children:"Create Non-Linear Algorithm Index"})}),"\n",(0,i.jsx)(n.p,{children:"Creating non-linear algorithm indexes allows you to optimize query execution based on spatial or high-dimensional data structures."}),"\n",(0,i.jsx)(n.p,{children:"The NonLinearAlgorithm enum currently supports algorithms like KDTree (K-dimensional tree), which is useful for nearest-neighbor searches and multidimensional range queries."}),"\n",(0,i.jsx)(n.p,{children:"Non Linear Algorithm Indexes improve query performance by pre-structuring the data, but depending on the algorithm, there may be tradeoffs between query time and memory consumption."}),"\n",(0,i.jsx)(n.p,{children:"In the Ahnlich client, you can create a non-linear algorithm index by calling the create_non_linear_algorithm_index RPC via the DbServiceStub."}),"\n",(0,i.jsx)(n.h2,{id:"define-a-client-and-call-the-api",children:"Define a Client and Call the API"}),"\n",(0,i.jsx)(n.p,{children:"The following example shows how to initialize a client, request index creation, and inspect the server\u2019s response."}),"\n",(0,i.jsxs)(r,{children:[(0,i.jsx)("summary",{children:"Click to expand code"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-py",children:'import asyncio\nfrom grpclib.client import Channel\nfrom ahnlich_client_py.grpc.services.db_service import DbServiceStub\nfrom ahnlich_client_py.grpc.db import query as db_query\nfrom ahnlich_client_py.grpc.algorithm.nonlinear import NonLinearAlgorithm\n\n\nasync def create_non_linear_algo_index():\n  async with Channel(host="127.0.0.1", port=1369) as channel:\n      client = DbServiceStub(channel)\n      \n      response = await client.create_non_linear_algorithm_index(\n          db_query.CreateNonLinearAlgorithmIndex(\n              store="test store 003",\n              non_linear_indices=[NonLinearAlgorithm.KDTree]\n          )\n      )\n      # response.created_indexes shows how many indexes were created\n  print(response)\n\n\nif __name__ == "__main__":\n  asyncio.run(create_non_linear_algo_index())\n'})})]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);