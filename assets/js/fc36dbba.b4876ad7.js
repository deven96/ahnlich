"use strict";(self.webpackChunkahnlich_web=self.webpackChunkahnlich_web||[]).push([[4116],{28453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>t});var s=i(96540);const r={},d=s.createContext(r);function l(e){const n=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(d.Provider,{value:n},e.children)}},77879:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>o,frontMatter:()=>l,metadata:()=>s,toc:()=>h});const s=JSON.parse('{"id":"components/ahnlich-db/advanced","title":"Advanced","description":"Ahnlich DB supports multiple similarity algorithms that determine how vectors are compared. Choosing the right one depends on your use case (recommendations, semantic search, image retrieval, etc.).","source":"@site/docs/components/ahnlich-db/advanced.md","sourceDirName":"components/ahnlich-db","slug":"/components/ahnlich-db/advanced","permalink":"/docs/components/ahnlich-db/advanced","draft":false,"unlisted":false,"editUrl":"https://github.com/deven96/ahnlich/tree/main/web/ahnlich-web/docs/components/ahnlich-db/advanced.md","tags":[],"version":"current","sidebarPosition":30,"frontMatter":{"title":"Advanced","sidebar_position":30},"sidebar":"docsSidebar","previous":{"title":"Reference","permalink":"/docs/components/ahnlich-db/reference"},"next":{"title":"\ud83e\udd16 Ahnlich AI","permalink":"/docs/components/ahnlich-ai/"}}');var r=i(74848),d=i(28453);const l={title:"Advanced",sidebar_position:30},t="Advanced",c={},h=[{value:"1. Cosine Similarity (Linear)",id:"1-cosine-similarity-linear",level:2},{value:"2. Euclidean Distance (Linear)",id:"2-euclidean-distance-linear",level:2},{value:"3. k-d Tree (Non-Linear)",id:"3-k-d-tree-non-linear",level:2},{value:"Choosing the Right Algorithm",id:"choosing-the-right-algorithm",level:2},{value:"Performance &amp; Trade-offs of Similarity Algorithms in Ahnlich DB",id:"performance--trade-offs-of-similarity-algorithms-in-ahnlich-db",level:3},{value:"1. Cosine Similarity",id:"1-cosine-similarity",level:4},{value:"2. Euclidean Distance",id:"2-euclidean-distance",level:4},{value:"3. k-d Tree (Non-Linear Index)",id:"3-k-d-tree-non-linear-index",level:4},{value:"Ahnlich DB \u2013 Deeper Dive into Commands &amp; Advanced Similarity",id:"ahnlich-db--deeper-dive-into-commands--advanced-similarity",level:2},{value:"1. Command Deep Dive",id:"1-command-deep-dive",level:3},{value:"1.1 Server Management",id:"11-server-management",level:4},{value:"1.2 Store Lifecycle",id:"12-store-lifecycle",level:4},{value:"1.3 Vector Operations",id:"13-vector-operations",level:4},{value:"1.4 Querying &amp; Filtering",id:"14-querying--filtering",level:4},{value:"1.5 Indexes",id:"15-indexes",level:4},{value:"2. Advanced Similarity Algorithms",id:"2-advanced-similarity-algorithms",level:3},{value:"Linear Algorithms",id:"linear-algorithms",level:4},{value:"Non-Linear Algorithms",id:"non-linear-algorithms",level:4},{value:"3. Choosing the Right Algorithm",id:"3-choosing-the-right-algorithm",level:3},{value:"4. Putting It Together \u2013 End-to-End Flow",id:"4-putting-it-together--end-to-end-flow",level:3}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"advanced",children:"Advanced"})}),"\n",(0,r.jsx)(n.p,{children:"Ahnlich DB supports multiple similarity algorithms that determine how vectors are compared. Choosing the right one depends on your use case (recommendations, semantic search, image retrieval, etc.)."}),"\n",(0,r.jsx)(n.h2,{id:"1-cosine-similarity-linear",children:"1. Cosine Similarity (Linear)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definition:"}),"\nMeasures the cosine of the angle between two vectors. It focuses on the ",(0,r.jsx)(n.strong,{children:"orientation"})," rather than magnitude."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"When to Use:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Text embeddings (semantic similarity, NLP)."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"High-dimensional embeddings where magnitude isn\u2019t important."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Command:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"GETSIMN 3 WITH [0.25, 0.88] USING cosinesimilarity IN my_store\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Use Case Example:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:'Query: "What\u2019s the capital of France?"'}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Store contains embeddings for documents about Paris, Rome, and Madrid."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:'Cosine similarity retrieves the document most semantically aligned with "Paris".'}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"2-euclidean-distance-linear",children:"2. Euclidean Distance (Linear)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definition:"}),"\nMeasures the straight-line (L2 norm) distance between two vectors."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"When to Use:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Image embeddings (where vector magnitude carries meaning)."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"-Recommendation engines where closeness in feature space is meaningful."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Command:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"GETSIMN 5 WITH [0.12, 0.45] USING euclidean IN image_store\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Use Case Example:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Searching for similar product images in an e-commerce system."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"A handbag photo returns visually similar handbags."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"3-k-d-tree-non-linear",children:"3. k-d Tree (Non-Linear)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definition:"}),"\nA space-partitioning data structure for organizing vectors in ",(0,r.jsx)(n.strong,{children:"k-dimensional space"}),".\nIt allows efficient nearest-neighbor search for structured, spatially distributed vectors."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"When to Use:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Lower-dimensional embeddings (\u2264 50 dimensions)."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Spatial/geometric queries (e.g., geolocation vectors)."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["When you need ",(0,r.jsx)(n.strong,{children:"fast exact search"})," over medium-sized datasets."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Command to Create Index:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"CREATE NON LINEAR ALGORITHM INDEX kdtree IN geo_store\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Query Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"GETSIMN 10 WITH [40.7128, -74.0060] USING kdtree IN geo_store\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Use Case Example:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"A ride-sharing app storing city coordinates."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Querying with New York City coordinates retrieves the 10 nearest drivers."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"choosing-the-right-algorithm",children:"Choosing the Right Algorithm"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:(0,r.jsx)(n.strong,{children:"Algorithm"})}),(0,r.jsx)(n.th,{children:(0,r.jsx)(n.strong,{children:"Best For"})}),(0,r.jsx)(n.th,{children:(0,r.jsx)(n.strong,{children:"Pros"})}),(0,r.jsx)(n.th,{children:(0,r.jsx)(n.strong,{children:"Cons"})})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Cosine Similarity"}),(0,r.jsx)(n.td,{children:"NLP, semantic search"}),(0,r.jsx)(n.td,{children:"Ignores magnitude, fast"}),(0,r.jsx)(n.td,{children:"Not good for magnitude-based data"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Euclidean Distance"}),(0,r.jsx)(n.td,{children:"Images, structured numeric features"}),(0,r.jsx)(n.td,{children:"Intuitive, works with magnitude"}),(0,r.jsx)(n.td,{children:"Slower in very high dimensions"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"k-d Tree"}),(0,r.jsx)(n.td,{children:"Geospatial, medium-dim embeddings"}),(0,r.jsx)(n.td,{children:"Efficient exact NN search"}),(0,r.jsx)(n.td,{children:"Struggles in very high dimensions"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"performance--trade-offs-of-similarity-algorithms-in-ahnlich-db",children:"Performance & Trade-offs of Similarity Algorithms in Ahnlich DB"}),"\n",(0,r.jsxs)(n.p,{children:["Ahnlich DB is optimized for ",(0,r.jsx)(n.strong,{children:"real-time vector similarity search"}),", but different algorithms behave differently depending on ",(0,r.jsx)(n.strong,{children:"data size, dimensionality, and query type"}),". Below is a detailed comparison."]}),"\n",(0,r.jsx)(n.h4,{id:"1-cosine-similarity",children:"1. Cosine Similarity"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Speed:"}),"  Very fast (linear scan over vectors)."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Accuracy:"})," High for semantic embeddings."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Memory Usage:"})," Moderate, since normalization is required."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Benchmark Insight (example):"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Dataset: 1M text embeddings (768-dim BERT)."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Avg. Query Latency: ~15ms (on 16-core CPU, in-memory)."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Accuracy: 95% recall@10 compared to brute-force."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Best Trade-off:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Works best in high-dimensional semantic spaces (text, NLP)."}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"2-euclidean-distance",children:"2. Euclidean Distance"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Speed:"}),"  Similar to cosine, but distance calculations are slightly heavier."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Accuracy:"})," High when magnitude matters."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Memory Usage:"})," Higher than cosine if embeddings are not normalized."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Benchmark Insight (example):"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Dataset: 5M product images (512-dim CLIP embeddings)."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Avg. Query Latency: ~25ms."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Accuracy: 93% recall@10."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Best Trade-off:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Ideal for ",(0,r.jsx)(n.strong,{children:"recommendations, computer vision, and structured numeric data"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"3-k-d-tree-non-linear-index",children:"3. k-d Tree (Non-Linear Index)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Accuracy:"})," Exact nearest-neighbor search (100%)."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Memory Usage:"})," Higher (tree indexing overhead)."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Benchmark Insight (example):"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Dataset: 10M geolocation vectors (2D lat-long)."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Avg. Query Latency: ~3ms (index lookup)."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Accuracy: 100% exact matches."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Limitation:"})," Performance drops for very high-dimensional data (curse of dimensionality)."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Best Trade-off:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Perfect for ",(0,r.jsx)(n.strong,{children:"geospatial queries, structured 2D/3D data"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Summary Table"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:(0,r.jsx)(n.strong,{children:"Algorithm"})}),(0,r.jsx)(n.th,{children:(0,r.jsx)(n.strong,{children:"Speed"})}),(0,r.jsx)(n.th,{children:(0,r.jsx)(n.strong,{children:"Accuracy"})}),(0,r.jsx)(n.th,{children:(0,r.jsx)(n.strong,{children:"Best Use Case"})}),(0,r.jsx)(n.th,{children:(0,r.jsx)(n.strong,{children:"Weakness"})})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Cosine Similarity"}),(0,r.jsx)(n.td,{children:"Fast"}),(0,r.jsx)(n.td,{children:"High (95%)"}),(0,r.jsx)(n.td,{children:"Semantic search (NLP, docs)"}),(0,r.jsx)(n.td,{children:"Ignores magnitude differences"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Euclidean Distance"}),(0,r.jsx)(n.td,{children:"Moderate"}),(0,r.jsx)(n.td,{children:"High (93%)"}),(0,r.jsx)(n.td,{children:"Image search, recommendations"}),(0,r.jsx)(n.td,{children:"Slower in high dims"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"k-d Tree"}),(0,r.jsx)(n.td,{children:"Ultra-Fast (low-dim)"}),(0,r.jsx)(n.td,{children:"Exact (100%)"}),(0,r.jsx)(n.td,{children:"Geospatial, low-dim structured data"}),(0,r.jsx)(n.td,{children:"Weak in high-dimensional space"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"ahnlich-db--deeper-dive-into-commands--advanced-similarity",children:"Ahnlich DB \u2013 Deeper Dive into Commands & Advanced Similarity"}),"\n",(0,r.jsxs)(n.p,{children:["This section explores how to ",(0,r.jsx)(n.strong,{children:"control the database through commands"}),", how queries are executed, and how similarity algorithms behave in practice. Think of it as a ",(0,r.jsx)(n.strong,{children:"power user\u2019s manual"})," for working with Ahnlich DB."]}),"\n",(0,r.jsx)(n.h3,{id:"1-command-deep-dive",children:"1. Command Deep Dive"}),"\n",(0,r.jsx)(n.h4,{id:"11-server-management",children:"1.1 Server Management"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"PING"}),"\nTests if the DB is alive. Essential for monitoring tools."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"> PING"}),"\n",(0,r.jsx)(n.code,{children:"< PONG"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"INFO SERVER"}),"\nReturns server metadata: version, uptime, active stores, tracing status."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'> INFO SERVER\n< {"version":"0.0.2","uptime":"3h45m","stores":["docs","images"]}\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"LIST CONNECTED CLIENTS"}),"\nShows all clients with their IP and connection status. Useful for debugging distributed workloads."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"12-store-lifecycle",children:"1.2 Store Lifecycle"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"LIST STORES"}),"\nReturns the vector stores available in the DB."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"CREATE STORE"})," ",(0,r.jsx)(n.code,{children:"<name>"}),"\nCreates a new container for vectors + metadata."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"> CREATE STORE articles\n< OK\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"DROP STORE"})," ",(0,r.jsx)(n.code,{children:"<name>"}),"\nDeletes a store permanently. Data cannot be recovered unless persistence is enabled."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"13-vector-operations",children:"1.3 Vector Operations"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SET"}),"\nInsert or overwrite a vector embedding + metadata."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:' > SET doc1 [0.12, 0.33, 0.44] WITH {"topic":"ai","visibility":"public"}\n< OK\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"GET KEY"}),"\nRetrieve a vector and its metadata by ID."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:' > GET KEY doc1\n< {"vector":[0.12,0.33,0.44],"metadata":{"topic":"ai","visibility":"public"}}\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"DELETE KEY"}),"\nRemove a vector completely."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"14-querying--filtering",children:"1.4 Querying & Filtering"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"GET SIM N"}),"\nCore similarity search query. Finds the N closest vectors to an input."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Supports linear (",(0,r.jsx)(n.code,{children:"cosine, euclidean"}),") and non-linear (",(0,r.jsx)(n.code,{children:"kdtree"}),")."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Can apply metadata filters."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'> GETSIMN 3 WITH [0.2,0.1,0.7] USING cosinesimilarity IN articles WHERE (visibility = "public")\n< [{"key":"doc5","score":0.92},{"key":"doc3","score":0.89},{"key":"doc7","score":0.87}]\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"GET BY PREDICATE"}),"\nFilter based on metadata conditions without running similarity search."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'> GET BY PREDICATE topic = "ai" IN articles\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"DELETE PREDICATE"}),"\nBulk delete vectors based on metadata."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'> DELETE PREDICATE visibility = "hidden" IN articles\n'})}),"\n",(0,r.jsx)(n.h4,{id:"15-indexes",children:"1.5 Indexes"}),"\n",(0,r.jsx)(n.p,{children:"Indexes allow Ahnlich DB to optimize lookups."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"CREATE PREDICATE INDEX"}),"\nSpeeds up metadata filtering."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"> CREATE PREDICATE INDEX ON articles(topic)\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"DROP PREDICATE INDEX"}),"\nRemove an index if it\u2019s not needed."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"CREATE NON LINEAR ALGORITHM INDEX"}),"\nBuilds a k-d tree index for non-linear nearest-neighbor queries."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"> CREATE NON LINEAR ALGORITHM INDEX kdtree ON geodata\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"DROP NON LINEAR ALGORITHM INDEX"}),"\nRemoves the k-d tree."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"2-advanced-similarity-algorithms",children:"2. Advanced Similarity Algorithms"}),"\n",(0,r.jsxs)(n.p,{children:["Ahnlich DB supports both ",(0,r.jsx)(n.strong,{children:"linear"})," and ",(0,r.jsx)(n.strong,{children:"non-linear"})," similarity searches, giving engineers flexibility depending on data type, size, and query needs."]}),"\n",(0,r.jsx)(n.h4,{id:"linear-algorithms",children:"Linear Algorithms"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Cosine Similarity"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Measures the ",(0,r.jsx)(n.strong,{children:"angle"})," between two vectors."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Magnitude is ignored \u2192 perfect for ",(0,r.jsx)(n.strong,{children:"semantic embeddings"})," (e.g., text/doc search)."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Lightweight, fast to compute."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'get_sim_n(\n    store="articles",\n    search_input=[0.21, 0.45, 0.76],\n    closest_n=5,\n    algorithm=CosineSimilarity,\n    condition=Predicate::Equals{ key="visibility", value="public" },\n)\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example use case:"})," Search for documents most semantically related to a query sentence, ignoring length differences."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Euclidean Distance"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Measures ",(0,r.jsx)(n.strong,{children:"absolute distance"})," in vector space."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Magnitude matters \u2192 good for ",(0,r.jsx)(n.strong,{children:"images, recommendations, sensor data"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"More expensive than cosine but captures real \u201ccloseness.\u201d"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'db.get_sim_n(\n    store="images",\n    search_input=[0.12, 0.33, 0.87],\n    closest_n=10,\n    algorithm="euclidean",\n)\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example use case:"})," Finding visually similar product images where scale and brightness differences matter."]}),"\n",(0,r.jsx)(n.h4,{id:"non-linear-algorithms",children:"Non-Linear Algorithms"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"k-d Tree Index"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Builds a ",(0,r.jsx)(n.strong,{children:"space-partitioning structure"})," for fast nearest-neighbor lookup."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Perfect for ",(0,r.jsx)(n.strong,{children:"low-dimensional structured data (2D, 3D, 50 dims)"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Exact, not approximate."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"> CREATE NON LINEAR ALGORITHM INDEX kdtree ON geodata\n> GETSIMN 5 WITH [40.71,-74.00] USING kdtree IN geodata\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example use case:"})," Find the 5 closest stores to a user\u2019s GPS location.\nNote: Performance drops in high dimensions (curse of dimensionality)."]}),"\n",(0,r.jsx)(n.h3,{id:"3-choosing-the-right-algorithm",children:"3. Choosing the Right Algorithm"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:(0,r.jsx)(n.strong,{children:"Algorithm"})}),(0,r.jsx)(n.th,{children:(0,r.jsx)(n.strong,{children:"Strengths"})}),(0,r.jsx)(n.th,{children:(0,r.jsx)(n.strong,{children:"Weaknesses"})}),(0,r.jsx)(n.th,{children:(0,r.jsx)(n.strong,{children:"Example Use Case"})})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Cosine Similarity"}),(0,r.jsx)(n.td,{children:"Fast, ignores scale, semantic focus"}),(0,r.jsx)(n.td,{children:"Magnitude differences ignored"}),(0,r.jsx)(n.td,{children:"NLP semantic search"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Euclidean Distance"}),(0,r.jsx)(n.td,{children:"Captures true closeness, magnitude"}),(0,r.jsx)(n.td,{children:"Slower in high dims"}),(0,r.jsx)(n.td,{children:"Image search, recommendations"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"k-d Tree"}),(0,r.jsx)(n.td,{children:"Exact, blazing fast in low-dim"}),(0,r.jsx)(n.td,{children:"Poor in >50 dimensions"}),(0,r.jsx)(n.td,{children:"Geospatial queries"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"4-putting-it-together--end-to-end-flow",children:"4. Putting It Together \u2013 End-to-End Flow"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"CREATE STORE"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"CREATE STORE articles\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"INSERT DATA"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'SET doc1 [0.12,0.33,0.44] WITH {"topic":"ai","visibility":"public"}\nSET doc2 [0.50,0.61,0.11] WITH {"topic":"finance","visibility":"public"}\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"BUILD INDEXES"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"CREATE PREDICATE INDEX ON articles(topic)\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"RUN QUERIES"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'GETSIMN 3 WITH [0.20,0.10,0.70] USING cosinesimilarity IN articles WHERE (topic="ai")\n'})})]})}function o(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}}}]);