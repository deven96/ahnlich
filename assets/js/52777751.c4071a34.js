"use strict";(self.webpackChunkahnlich_web=self.webpackChunkahnlich_web||[]).push([[6692],{28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>o});var r=t(96540);const i={},l=r.createContext(i);function c(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),r.createElement(l.Provider,{value:n},e.children)}},50642:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>c,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"client-libraries/go/request-ai/delete-key","title":"Delete Key","description":"Description","source":"@site/docs/client-libraries/go/request-ai/delete-key.md","sourceDirName":"client-libraries/go/request-ai","slug":"/client-libraries/go/request-ai/delete-key","permalink":"/docs/client-libraries/go/request-ai/delete-key","draft":false,"unlisted":false,"editUrl":"https://github.com/deven96/ahnlich/tree/main/web/ahnlich-web/docs/client-libraries/go/request-ai/delete-key.md","tags":[],"version":"current","frontMatter":{"title":"Delete Key"},"sidebar":"docsSidebar","previous":{"title":"Drop Predicate Index","permalink":"/docs/client-libraries/go/request-ai/drop-predicate-index"},"next":{"title":"Drop Store","permalink":"/docs/client-libraries/go/request-ai/drop-store"}}');var i=t(74848),l=t(28453);const c={title:"Delete Key"},o="Delete Key",s={},a=[{value:"Description",id:"description",level:2},{value:"Source Code Example",id:"source-code-example",level:2},{value:"Behavior",id:"behavior",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"delete-key",children:"Delete Key"})}),"\n",(0,i.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"DeleteKey"})," request removes specific entries from an AI-managed store using their ",(0,i.jsx)(n.strong,{children:"input keys"}),". Unlike dropping the store entirely, this operation targets only selected records."]}),"\n",(0,i.jsx)(n.h2,{id:"source-code-example",children:"Source Code Example"}),"\n",(0,i.jsxs)(t,{children:[(0,i.jsx)("summary",{children:"Click to expand source code"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'package main\n\n\nimport (\n  "context"\n  "fmt"\n  "log"\n  "time"\n\n\n  "google.golang.org/grpc"\n  "google.golang.org/grpc/credentials/insecure"\n\n\n  aiquery "github.com/deven96/ahnlich/sdk/ahnlich-client-go/grpc/ai/query"\n  aisvc "github.com/deven96/ahnlich/sdk/ahnlich-client-go/grpc/services/ai_service"\n  keyval "github.com/deven96/ahnlich/sdk/ahnlich-client-go/grpc/keyval"\n)\n\n\nconst AIAddr = "127.0.0.1:1370"\n\n\n// ExampleAIClient wraps the connection + AIService client\ntype ExampleAIClient struct {\n  conn   *grpc.ClientConn\n  client aisvc.AIServiceClient\n  ctx    context.Context\n}\n\n\n// NewAIClient creates and connects the AI client\nfunc NewAIClient(ctx context.Context) (*ExampleAIClient, error) {\n  conn, err := grpc.DialContext(ctx, AIAddr,\n      grpc.WithTransportCredentials(insecure.NewCredentials()),\n      grpc.WithBlock(),\n  )\n  if err != nil {\n      return nil, fmt.Errorf("failed to dial AI server %q: %w", AIAddr, err)\n  }\n  client := aisvc.NewAIServiceClient(conn)\n  return &ExampleAIClient{conn: conn, client: client, ctx: ctx}, nil\n}\n\n\nfunc (c *ExampleAIClient) Close() error {\n  return c.conn.Close()\n}\n\n\n// ---- DelKey  ----\nfunc (c *ExampleAIClient) exampleDeleteKeyAI() error {\n  _, err := c.client.DelKey(c.ctx, &aiquery.DelKey{\n      Store: "ai_store01",\n      Keys: []*keyval.StoreInput{\n          {Value: &keyval.StoreInput_RawString{RawString: "X"}},\n      },\n  })\n  if err != nil {\n      return err\n  }\n  fmt.Println(" Successfully deleted key \'X\' from store ai_store")\n  return nil\n}\n\n\nfunc main() {\n  ctx, cancel := context.WithTimeout(context.Background(), 15*time.Second)\n  defer cancel()\n\n\n  client, err := NewAIClient(ctx)\n  if err != nil {\n      log.Fatalf(" Failed to create AI client: %v", err)\n  }\n  defer client.Close()\n\n\n  if err := client.exampleDeleteKeyAI(); err != nil {\n      log.Fatalf(" DeleteKey failed: %v", err)\n  }\n}\n'})})]}),"\n",(0,i.jsx)(n.h2,{id:"behavior",children:"Behavior"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Only the entries associated with the provided key(s) are removed."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Supports deleting multiple keys at once by passing more StoreInput values."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"If a key does not exist, behavior depends on configuration\u2014it may silently ignore or return an error."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Useful for targeted cleanup without affecting the rest of the store."}),"\n"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);