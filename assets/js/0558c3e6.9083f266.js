"use strict";(self.webpackChunkahnlich_web=self.webpackChunkahnlich_web||[]).push([[442],{28453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>t});var l=i(96540);const s={},r=l.createContext(s);function c(e){const n=l.useContext(r);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),l.createElement(r.Provider,{value:n},e.children)}},83482:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>t,default:()=>h,frontMatter:()=>c,metadata:()=>l,toc:()=>a});const l=JSON.parse('{"id":"client-libraries/go/go-specific-resources","title":"Go Specific Resources","description":"QuickStart - Setup","source":"@site/docs/client-libraries/go/go-specific-resources.md","sourceDirName":"client-libraries/go","slug":"/client-libraries/go/go-specific-resources","permalink":"/docs/client-libraries/go/go-specific-resources","draft":false,"unlisted":false,"editUrl":"https://github.com/deven96/ahnlich/tree/main/web/ahnlich-web/docs/client-libraries/go/go-specific-resources.md","tags":[],"version":"current","frontMatter":{"title":"Go Specific Resources","sidebar_posiiton":1},"sidebar":"docsSidebar","previous":{"title":"Go","permalink":"/docs/client-libraries/go/"},"next":{"title":"Request DB","permalink":"/docs/client-libraries/go/request-db/"}}');var s=i(74848),r=i(28453);const c={title:"Go Specific Resources",sidebar_posiiton:1},t=void 0,o={},a=[{value:"QuickStart - Setup",id:"quickstart---setup",level:2},{value:"Install Go",id:"install-go",level:2},{value:"macOS",id:"macos",level:3},{value:"Windows",id:"windows",level:3},{value:"Linux",id:"linux",level:3},{value:"Install the Ahnlich Go SDK",id:"install-the-ahnlich-go-sdk",level:2},{value:"What\u2019s Included in the SDK?",id:"whats-included-in-the-sdk",level:3},{value:"Request-DB for:",id:"request-db-for",level:4},{value:"Request-AI for:",id:"request-ai-for",level:4},{value:"With these request/response types, you can build Go applications that:",id:"with-these-requestresponse-types-you-can-build-go-applications-that",level:4},{value:"Package Information",id:"package-information",level:3},{value:"DB gRPC types",id:"db-grpc-types",level:4},{value:"AI gRPC types",id:"ai-grpc-types",level:4},{value:"Initialization",id:"initialization",level:2},{value:"Client Setup",id:"client-setup",level:3},{value:"DB Client",id:"db-client",level:3},{value:"AI Client",id:"ai-client",level:3},{value:"Connection Pooling",id:"connection-pooling",level:3}];function d(e){const n={code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components},{Details:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"quickstart---setup",children:"QuickStart - Setup"}),"\n",(0,s.jsx)(n.p,{children:"Follow these steps to set up the Ahnlich Go SDK on your local machine."}),"\n",(0,s.jsx)(n.h2,{id:"install-go",children:"Install Go"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"  # Check if you already have Go installed:\n  go version\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Example output:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"  go version go1.20.5 linux/amd64\n"})}),"\n",(0,s.jsx)(n.p,{children:"If Go is not installed, follow the steps for your operating system:"}),"\n",(0,s.jsx)(n.h3,{id:"macos",children:"macOS"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"  # Install using Homebrew:\n  brew install go\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"  # Verify the installation:\n  go version\n"})}),"\n",(0,s.jsx)(n.h3,{id:"windows",children:"Windows"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Download the MSI installer from the official Go website."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Run the installer and follow the setup wizard."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Open Command Prompt or PowerShell and check:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"  go version\n"})}),"\n",(0,s.jsx)(n.h3,{id:"linux",children:"Linux"}),"\n",(0,s.jsx)(n.p,{children:"Download the Go tarball from the official Go website."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Source Code Source Code Example:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"  # Download Go\n  wget https://go.dev/dl/go1.20.5.linux-amd64.tar.gz\n\n  # Extract to /usr/local\n  sudo tar -C /usr/local -xzf go1.20.5.linux-amd64.tar.gz\n\n  # Add Go to your PATH (append this line to ~/.bashrc or ~/.zshrc)\n  export PATH=$PATH:/usr/local/go/bin\n\n  # Reload your shell (or run: source ~/.bashrc) and verify installation\n  go version\n"})}),"\n",(0,s.jsx)(n.h2,{id:"install-the-ahnlich-go-sdk",children:"Install the Ahnlich Go SDK"}),"\n",(0,s.jsx)(n.p,{children:"The Ahnlich Go SDK provides the client libraries you\u2019ll use to connect with Ahnlich DB (vector database) and Ahnlich AI (semantic embedding/search)."}),"\n",(0,s.jsx)(n.p,{children:"You can add it to your project in two ways:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"  Install with go get\n"})}),"\n",(0,s.jsx)(n.p,{children:"Run the following command in your project directory:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"  Using go get\n  github.com/deven96/ahnlich/sdk/ahnlich-client-go@vX.Y.Z\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Replace vX.Y.Z with the latest version of the SDK."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"This will install support for both DB and AI request/response types."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"After running it, you should see the SDK listed in your go.mod file."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Or Add it manually in ",(0,s.jsx)(n.strong,{children:"go.mod"})]}),"\n",(0,s.jsx)(n.p,{children:"Open your go.mod file and add the following line inside the require block:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"  require (\n      github.com/deven96/ahnlich/sdk/ahnlich-client-go vX.Y.Z\n  )\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Again, replace vX.Y.Z with the desired version."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Once added, ",(0,s.jsx)(n.strong,{children:"run:"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"  go mod tidy\n"})}),"\n",(0,s.jsx)(n.p,{children:"This will download the SDK and clean up your module dependencies."}),"\n",(0,s.jsx)(n.h3,{id:"whats-included-in-the-sdk",children:"What\u2019s Included in the SDK?"}),"\n",(0,s.jsx)(n.p,{children:"The Ahnlich Go SDK contains everything you need to work with both the DB service and the AI service.\nIt provides strongly-typed request and response objects that you can use to interact with Ahnlich DB AND AI."}),"\n",(0,s.jsx)(n.p,{children:"These types let you perform operations such as:"}),"\n",(0,s.jsx)(n.h4,{id:"request-db-for",children:"Request-DB for:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Creating and deleting stores"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Inserting and updating vectors"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Running similarity search queries"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Managing filters and predicates for advanced search"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"request-ai-for",children:"Request-AI for:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Generating vector embeddings from text or binary data"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Running embedding-based queries"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Using AI-powered similarity for enhanced search"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"with-these-requestresponse-types-you-can-build-go-applications-that",children:"With these request/response types, you can build Go applications that:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Use ",(0,s.jsx)(n.strong,{children:"Ahnlich DB"})," for exact vector similarity search."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Use ",(0,s.jsx)(n.strong,{children:"Ahnlich AI"})," for semantic embeddings and intelligent search."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Or combine both for hybrid workflows."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Once installed, you can start building Go applications that use Ahnlich DB for vector search and Ahnlich AI for semantic embeddings."}),"\n",(0,s.jsx)(n.h3,{id:"package-information",children:"Package Information"}),"\n",(0,s.jsx)(n.p,{children:"This module provides:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"gRPC service"})," stubs for both ",(0,s.jsx)(n.strong,{children:"DB"})," and ",(0,s.jsx)(n.strong,{children:"AI"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Pipeline utilities"})," for batching RPC calls efficiently."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"db-grpc-types",children:"DB gRPC types"}),"\n",(0,s.jsx)(n.p,{children:"All DB request/response messages live under:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Example"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'  import "github.com/deven96/ahnlich/sdk/ahnlich-client-go/grpc/db"\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"These cover operations like:"}),"\n",(0,s.jsx)(n.p,{children:"... Creating and deleting stores"}),"\n",(0,s.jsx)(n.p,{children:"... Inserting and updating vectors"}),"\n",(0,s.jsx)(n.p,{children:"... Running similarity searches"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"ai-grpc-types",children:"AI gRPC types"}),"\n",(0,s.jsx)(n.p,{children:"All AI request/response messages live under:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'  import "github.com/deven96/ahnlich/sdk/ahnlich-client-go/grpc/ai"\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"These cover operations like:"}),"\n",(0,s.jsx)(n.p,{children:"... Embedding text or binary data"}),"\n",(0,s.jsx)(n.p,{children:"... Querying embeddings"}),"\n",(0,s.jsx)(n.p,{children:"... Powering semantic search"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Pipeline Utilities\nUtilities for ",(0,s.jsx)(n.strong,{children:"batching RPC calls"}),", allowing efficient handling of multiple requests in a single operation."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"initialization",children:"Initialization"}),"\n",(0,s.jsxs)(n.p,{children:["The Ahnlich Go SDK provides client implementations for both ",(0,s.jsx)(n.strong,{children:"DB"})," and ",(0,s.jsx)(n.strong,{children:"AI"})," services.\nBefore issuing queries or embedding requests, you must first initialize a client connection over gRPC."]}),"\n",(0,s.jsx)(n.h3,{id:"client-setup",children:"Client Setup"}),"\n",(0,s.jsx)(n.p,{children:"Both DB and AI clients share a similar initialization pattern:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Define the ",(0,s.jsx)(n.strong,{children:"server address"})," (default ",(0,s.jsx)(n.code,{children:"DB: 127.0.0.1:1369"}),", ",(0,s.jsx)(n.code,{children:"AI: 127.0.0.1:1370"}),")."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Use ",(0,s.jsx)(n.code,{children:"grpc.DialContext"})," with insecure credentials for local development."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Create a new service client from the generated gRPC stubs."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Always close the client connection when finished."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"This ensures proper resource management and clean shutdown."}),"\n",(0,s.jsx)(n.h3,{id:"db-client",children:"DB Client"}),"\n",(0,s.jsx)(n.p,{children:"The DB client allows you to connect to an Ahnlich DB instance and perform vector operations such as creating stores, inserting embeddings, or querying for similarity.\npackage example"}),"\n",(0,s.jsxs)(i,{children:[(0,s.jsx)("summary",{children:"Click to expand source code"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'import (\n    "context"\n    "fmt"\n    "log"\n    "time"\n    "google.golang.org/grpc"\n    "google.golang.org/grpc/credentials/insecure"\n\n    algorithm "github.com/deven96/ahnlich/sdk/ahnlich-client-go/grpc/algorithm/algorithms"\n    dbsvc     "github.com/deven96/ahnlich/sdk/ahnlich-client-go/grpc/services/db_service"\n    dbquery   "github.com/deven96/ahnlich/sdk/ahnlich-client-go/grpc/db/query"\n    keyval    "github.com/deven96/ahnlich/sdk/ahnlich-client-go/grpc/keyval"\n    metadata  "github.com/deven96/ahnlich/sdk/ahnlich-client-go/grpc/metadata"\n    predicates "github.com/deven96/ahnlich/sdk/ahnlich-client-go/grpc/predicates"\n)\n\nconst ServerAddr = "127.0.0.1:1369"\n\n// ExampleDBClient holds the gRPC connection and client.\ntype ExampleDBClient struct {\n    conn   *grpc.ClientConn\n    client dbsvc.DBServiceClient\n}\n\n// NewDBClient connects to the Ahnlich DB server.\nfunc NewDBClient(ctx context.Context) (*ExampleDBClient, error) {\n    conn, err := grpc.DialContext(\n        ctx,\n        ServerAddr,\n        grpc.WithTransportCredentials(insecure.NewCredentials()),\n        grpc.WithBlock(),\n    )\n    if err != nil {\n        return nil, fmt.Errorf("failed to dial DB server %q: %w", ServerAddr, err)\n    }\n    client := dbsvc.NewDBServiceClient(conn)\n    return &ExampleDBClient{conn: conn, client: client}, nil\n}\n\n// Close closes the gRPC connection.\nfunc (c *ExampleDBClient) Close() error {\n    return c.conn.Close()\n}\n'})})]}),"\n",(0,s.jsx)(n.h3,{id:"ai-client",children:"AI Client"}),"\n",(0,s.jsx)(n.p,{children:"The AI client connects to the Ahnlich AI service, which handles embedding generation and semantic queries."}),"\n",(0,s.jsxs)(i,{children:[(0,s.jsx)("summary",{children:"Click to expand source code"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'package example\n\nimport (\n    "context"\n    "fmt"\n    "time"\n    "google.golang.org/grpc"\n    "google.golang.org/grpc/credentials/insecure"\n\n    algorithm "github.com/deven96/ahnlich/sdk/ahnlich-client-go/grpc/algorithm/algorithms"\n    aisvc      "github.com/deven96/ahnlich/sdk/ahnlich-client-go/grpc/services/ai_service"\n    aiquery    "github.com/deven96/ahnlich/sdk/ahnlich-client-go/grpc/ai/query"\n    aimodel    "github.com/deven96/ahnlich/sdk/ahnlich-client-go/grpc/ai/models"\n    keyval     "github.com/deven96/ahnlich/sdk/ahnlich-client-go/grpc/keyval"\n    metadata   "github.com/deven96/ahnlich/sdk/ahnlich-client-go/grpc/metadata"\n    preprocess "github.com/deven96/ahnlich/sdk/ahnlich-client-go/grpc/ai/preprocess"\n    predicates "github.com/deven96/ahnlich/sdk/ahnlich-client-go/grpc/predicates"\n)\n\nconst AIAddr = "127.0.0.1:1370"\n\n// ExampleAIClient holds the gRPC connection and AI client.\ntype ExampleAIClient struct {\n    conn   *grpc.ClientConn\n    client aisvc.AIServiceClient\n}\n\n// NewAIClient connects to the Ahnlich AI server.\nfunc NewAIClient(ctx context.Context) (*ExampleAIClient, error) {\n    conn, err := grpc.DialContext(\n        ctx,\n        AIAddr,\n        grpc.WithTransportCredentials(insecure.NewCredentials()),\n        grpc.WithBlock(),\n    )\n    if err != nil {\n        return nil, fmt.Errorf("failed to dial AI server %q: %w", AIAddr, err)\n    }\n    client := aisvc.NewAIServiceClient(conn)\n    return &ExampleAIClient{conn: conn, client: client}, nil\n}\n\n// Close closes the gRPC connection.\nfunc (c *ExampleAIClient) Close() error {\n    return c.conn.Close()\n}\n'})})]}),"\n",(0,s.jsx)(n.h3,{id:"connection-pooling",children:"Connection Pooling"}),"\n",(0,s.jsx)(n.p,{children:"Go\u2019s gRPC client reuses connections under the hood. This means you can safely create multiple clients from a single connection without additional overhead."}),"\n",(0,s.jsx)(n.p,{children:"For applications that require higher throughput or advanced resource control, you can manage your own pool of gRPC connections. This allows you to balance requests across multiple servers and fine-tune concurrency limits."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);